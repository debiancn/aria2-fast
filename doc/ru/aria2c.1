'\" t
.\"     Title: aria2c
.\"    Author: Tatsuhiro Tsujikawa <t-tujikawa@users.sourceforge.net>
.\" Generator: DocBook XSL Stylesheets v1.76.1 <http://docbook.sf.net/>
.\"      Date: 04/08/2012
.\"    Manual: Руководство по Aria2
.\"    Source: Aria2 1.15.0
.\"  Language: Russian
.\"
.TH "aria2c" "1" "04/08/2012" "Aria2 1\&.15\&.0" "Руководство по Aria2"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "ИМЯ"
aria2c \- сверхбыстрая утилита загрузки
.SH "СИНОПСИС"
.sp
aria2c [\fIПАРАМЕТРЫ\fR] [\fIURI\fR | \fIMAGNET\-ССЫЛКА\fR | \fITORRENT\-ФАЙЛ\fR | \fIMETALINK\-ФАЙЛ\fR]\&...
.SH "ОПИСАНИЕ"
.sp
aria2 \- это утилита для загрузки файлов\&. Поддерживаемые протоколы: HTTP(S), FTP, BitTorrent и Metalink\&. Для загрузки файла, aria2 может использовать разные источники/протоколы и пытается максимально использовать пропускную способность канала\&. Есть поддержка загрузки файла по протоколам HTTP(S)/FTP и BitTorrent одновременно, пока данные загружаются по HTTP(S)/FTP, они тут же могут выгружаться в BitTorrent\-рой\&. Используя контрольные суммы блока данных для Metalink, aria2 автоматически проверяет части данных, которые загружаются по BitTorrent\&.
.SH "ПАРАМЕТРЫ"
.SS "Основные параметры"
.PP
\fB\-d\fR, \fB\-\-dir\fR=DIR
.RS 4
Каталог для сохранения загруженных файлов\&.
.RE
.PP
\fB\-i\fR, \fB\-\-input\-file\fR=FILE
.RS 4
Загрузить URI, найденные в файле FILE\&. Вы можете указать несколько URI для одного объекта: разделяйте URI в строке, используя символ TAB (табуляция)\&. Когда указано
\fI\-\fR, ввод считывается из stdin (стандартный поток ввода)\&. Дополнительные параметры можно указывать после каждой строки с URI\&. Эта необязательная строка должна начинаться с одного или нескольких пробелов и содержать один параметр\&. Смотрите подраздел
\fBВходной файл\fR
для детальных пояснений\&. Также смотрите параметр
\fB\-\-deferred\-input\fR\&.
.RE
.PP
\fB\-l\fR, \fB\-\-log\fR=LOG
.RS 4
Имя файла для журнала событий\&. Если указан
\fI\-\fR, то журнал событий будет записан в stdout (стандартный поток вывода)\&. Если указана пустая строка (""), то журнал событий не будет записан в файл\&.
.RE
.PP
\fB\-j\fR, \fB\-\-max\-concurrent\-downloads\fR=N
.RS 4
Задать максимальное количество параллельных загрузок для каждого статического (HTTP/FTP) URI, torrent и metalink\&. Смотрите также параметр
\fB\-s\fR\&. По умолчанию:
\fI5\fR
.RE
.PP
\fB\-V\fR, \fB\-\-check\-integrity\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Проверить целостность файла путем подтверждения хэшей блоков или хэша полного файла\&. Этот параметр влияет лишь на BitTorrent, Metalink или HTTP(S)/FTP загрузки с параметром
\fB\-\-checksum\fR\&. Параметр может обнаружить поврежденные части файла и перезагрузить их\&. Если есть хэш полного файла, то проверка выполняется только, когда файл уже полностью загружен\&. Момент полной загрузки определяется по размеру файла\&. Если проверка хэша завершилась неудачно, то файл будет перезагружен с нуля\&. Если есть хэши блоков и хэш полного файла, то будут использоваться только хэши блоков\&. По умолчанию:
\fIfalse\fR
.RE
.PP
\fB\-c\fR, \fB\-\-continue\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Продолжить загрузку частично загруженного файла\&. Используйте этот параметр, чтобы возобновить загрузку, начатую в веб\-браузере или в другой программе, которая загружает файлы последовательно сначала\&. Сейчас этот параметр можно использовать только для HTTP(S)/FTP\-загрузок\&. По умолчанию:
\fIfalse\fR
.RE
.PP
\fB\-h\fR, \fB\-\-help\fR[=TAG|KEYWORD]
.RS 4
Справочное сообщение определяется метками (TAG)\&. Метки начинаются с "#"\&. Например, "\-\-help=#http" даст справку по параметрам, помеченным меткой "#http"\&. Если задано слово (KEYWORD), не являющееся меткой, то будет выведена справка по параметрам, содержащих это слово\&. Возможные значения:
\fI#basic\fR,
\fI#advanced\fR,
\fI#http\fR,
\fI#https\fR,
\fI#ftp\fR,
\fI#metalink\fR,
\fI#bittorrent\fR,
\fI#cookie\fR,
\fI#hook\fR,
\fI#file\fR,
\fI#rpc\fR,
\fI#checksum\fR,
\fI#experimental\fR,
\fI#deprecated\fR,
\fI#help\fR,
\fI#all\fR\&. По умолчанию:
\fI#basic\fR
.RE
.SS "Параметры HTTP/FTP"
.PP
\fB\-\-all\-proxy\fR=PROXY
.RS 4
Использовать указанный прокси\-сервер для всех протоколов\&. Для стирания ранее определенного адреса используйте ""\&. Вы можете отменить эту установку и указать прокси\-сервер для отдельного протокола, используя параметры
\fB\-\-http\-proxy\fR,
\fB\-\-https\-proxy\fR
и
\fB\-\-ftp\-proxy\fR\&. Влияет на все URI\&. Формат PROXY \- [http://][ПОЛЬЗОВАТЕЛЬ:ПАРОЛЬ@]ХОСТ[:ПОРТ]\&. Смотрите также раздел
\fBОКРУЖЕНИЕ\fR\&.
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
Если пользователь и пароль вставлены в URI\-прокси и они также указаны в параметрах \fB\-\-{http,https,ftp,all}\-proxy\-{user,passwd}\fR, то приоритетным будет самое последнее\&. Например, у вас http\-proxy\-user="myname", http\-proxy\-passwd="mypass" в aria2\&.conf и вы указали \-\-http\-proxy="http://proxy" в командной строке, тогда запрос к HTTP\-прокси "http://proxy" будет с пользователем "myname" и паролем "mypass"\&. Другой пример: если вы указали в командной строке \-\-http\-proxy="http://user:pass@proxy" \-\-http\-proxy\-user="myname" \-\-http\-proxy\-passwd="mypass", тогда запрос к HTTP\-прокси "http://proxy" будет с пользователем "myname" и паролем "mypass"\&. Еще один пример: если вы указали в командной строке \-\-http\-proxy\-user="myname" \-\-http\-proxy\-passwd="mypass" \-\-http\-proxy="http://user:pass@proxy", тогда запрос к HTTP\-прокси "http://proxy" будет с пользователем "user" и паролем "pass"\&.
.sp .5v
.RE
.PP
\fB\-\-all\-proxy\-passwd\fR=PASSWD
.RS 4
Задать пароль для параметра
\fB\-\-all\-proxy\fR\&.
.RE
.PP
\fB\-\-all\-proxy\-user\fR=USER
.RS 4
Задать пользователя для параметра
\fB\-\-all\-proxy\fR\&.
.RE
.PP
\fB\-\-checksum\fR=TYPE=DIGEST
.RS 4
Задать контрольную сумму\&. TYPE \- тип хэша\&. Поддерживаемые типы хэшей перечислены в "Алгоритмы хэширования" при "aria2c \-v"\&. DIGEST \- шестнадцатеричное значение хэша\&. Например, указание значения sha\-1 хэша выглядит так: sha\-1=0192ba11326fe2298c8cb4de616f4d4140213838 Этот параметр применим только к HTTP(S)/FTP загрузкам\&.
.RE
.PP
\fB\-\-connect\-timeout\fR=SEC
.RS 4
Задать в соединении время ожидания в секундах для установки подключения к HTTP/FTP/прокси\-серверу\&. После установки подключения этот параметр не имеет значения, и вместо него используется параметр
\fB\-\-timeout\fR\&. По умолчанию:
\fI60\fR
.RE
.PP
\fB\-\-dry\-run\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Если задано
\fItrue\fR, aria2 только проверяет, является ли удаленный файл доступным и не загружает данные\&. Этот параметр влияет на HTTP/FTP\-загрузку\&. BitTorrent\-загрузки отменяются, если указано
\fItrue\fR\&. По умолчанию:
\fIfalse\fR
.RE
.PP
\fB\-\-lowest\-speed\-limit\fR=SPEED
.RS 4
Закрывать соединение, если скорость загрузки меньше чем или равна значению SPEED (байт в секунду)\&.
\fI0\fR
означает, что aria2 не имеет нижнего ограничения скорости\&. Вы можете добавить
\fIK\fR
или
\fIM\fR
(1K = 1024, 1M = 1024K)\&. Этот параметр не влияет на BitTorrent\-загрузки\&. По умолчанию:
\fI0\fR
.RE
.sp
\fB\-x\fR, \fB\-\-max\-connection\-per\-server\fR=NUM::
.sp
.if n \{\
.RS 4
.\}
.nf
Максимально количество соединений с одним сервером для каждой
загрузки\&.
По умолчанию: \*(Aq1\*(Aq
.fi
.if n \{\
.RE
.\}
.PP
\fB\-\-max\-file\-not\-found\fR=NUM
.RS 4
Если aria2 получает статус "file not found" (файл не найден) с удаленных HTTP/FTP\-серверов NUM раз без получения, хотя бы одного байта, тогда принудительно отказывается от загрузки\&. Укажите
\fI0\fR, чтобы отключить этот параметр\&. Этот параметр действенен только, когда используются HTTP/FTP\-серверы\&. По умолчанию:
\fI0\fR
.RE
.PP
\fB\-m\fR, \fB\-\-max\-tries\fR=N
.RS 4
Задать количество попыток\&.
\fI0\fR
означает неограниченно\&. Смотрите также
\fB\-\-retry\-wait\fR\&. По умолчанию:
\fI5\fR
.RE
.PP
\fB\-k\fR, \fB\-\-min\-split\-size\fR=SIZE
.RS 4
aria2 не разбивает на части меньше чем 2*SIZE байт\&. Например, нужно загрузить файл размером 20МиБ\&. Если SIZE задать 10M, то aria2 может разбить файл на части в 2\-ух диапазонах [0\-10МиБ) и [10МиБ\-20МиБ) и загрузить его, используя 2 источника (если
\fB\-\-split\fR
>= 2, конечно же)\&. Если SIZE задать 15M, т\&.к\&. 2*15M > 20MiB, aria2 не разобьет файл на части и загрузит его, используя 1 источник\&. Вы можете добавить
\fIK\fR
или
\fIM\fR(1K = 1024, 1M = 1024K)\&. Возможные значения:
\fI1M\fR\-\fI1024M\fR\&. По умолчанию:
\fI20M\fR
.RE
.PP
\fB\-n\fR, \fB\-\-no\-netrc\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Отключить поддержку netrc\&. Поддержка netrc по умолчанию включена\&.
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
Файл netrc считывается только при запуске, если \fB\-\-no\-netrc\fR задан как \fIfalse\fR\&. Так что если \fB\-\-no\-netrc\fR задан как \fItrue\fR при загрузке, то netrc недоступен на протяжении всей сессии\&. Вы не сможете получить доступ к netrc, даже если отправите \fB\-\-no\-netrc\fR=\fIfalse\fR, используя \fBaria2\&.changeGlobalOption\fR\&.
.sp .5v
.RE
.PP
\fB\-\-no\-proxy\fR=DOMAINS
.RS 4
Укажите через запятую имена хостов, домены и сетевые адреса с CIDR\-блоком, или без него, для которых не будет использоваться прокси\&.
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
CIDR\-блок (метод IP\-адресации, например 192\&.168\&.0\&.20/24) работает с IPv4\- и IPv6\-адресами\&. Текущая реализация не разрешает имена хостов в URI для сравнения сетевых адресов указанных в \fB\-\-no\-proxy\fR\&. Таким образом, это эффективно, только если в URI есть IP\-адреса\&.
.sp .5v
.RE
.PP
\fB\-o\fR, \fB\-\-out\fR=FILE
.RS 4
Сохранить загруженный файл под указанным именем\&. Если используется параметр
\fB\-Z\fR, то данный параметр игнорируется\&.
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
В Metalink или BitTorrent загрузках вы не можете указать имя файла\&. Имя файла указывается здесь, только когда используются URI и aria2 с командной строкой без параметров \fB\-i\fR, \fB\-Z\fR\&. Например: aria2c \-o myfile\&.zip "http://mirror1/file\&.zip" "http://mirror2/file\&.zip"
.sp .5v
.RE
.PP
\fB\-\-proxy\-method\fR=METHOD
.RS 4
Задать метод для использования в прокси\-запросах\&.
\fIMETHOD\fR
один из двух:
\fIget\fR
или
\fItunnel\fR\&. HTTPS\-загрузки всегда используют
\fItunnel\fR, не обращая внимания на этот параметр\&. По умолчанию:
\fIget\fR
.RE
.PP
\fB\-R\fR, \fB\-\-remote\-time\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Извлекать временную метку файла с удаленного HTTP/FTP\-сервера и, если это доступно, применить ее к локальному файлу\&. По умолчанию:
\fIfalse\fR
.RE
.PP
\fB\-\-reuse\-uri\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Повторно использовать уже использованные URI, если не осталось неиспользованных URI\&. По умолчанию:
\fItrue\fR
.RE
.PP
\fB\-\-retry\-wait\fR=SEC
.RS 4
Задать в секундах интервал ожидания между повторными попытками\&. При SEC > 0, если HTTP\-сервер возвращает ответ 503, aria2 будет снова пытаться загрузить\&. По умолчанию:
\fI0\fR
.RE
.PP
\fB\-\-server\-stat\-of\fR=FILE
.RS 4
Указать имя файла, в который сохраняется профиль функционирования сервера\&. Вы можете загрузить сохраненные данные, используя параметр
\fB\-\-server\-stat\-if\fR\&. Формат файла смотрите ниже в подразделе
\fBПрофиль функционирования сервера\fR\&.
.RE
.PP
\fB\-\-server\-stat\-if\fR=FILE
.RS 4
Указать имя файла для загрузки профиля функционирования сервера\&. Загруженные данные будут использованы в некоторых URI селекторах, таких как
\fIfeedback\fR\&. Смотрите также параметр
\fB\-\-uri\-selector\fR\&. Формат файла смотрите ниже в подразделе
\fBПрофиль функционирования сервера\fR\&.
.RE
.PP
\fB\-\-server\-stat\-timeout\fR=SEC
.RS 4
Указывает время ожидания в секундах, для того, чтобы сделать недействительным профиль функционирования сервера, с тех пор, как состоялся последний контакт с ним\&. По умолчанию:
\fI86400\fR
(24 часа)
.RE
.PP
\fB\-s\fR, \fB\-\-split\fR=N
.RS 4
Загружать файл, используя N соединений\&. Если задано более чем N URI, будут использоваться первые N URI, а оставшиеся URI будут в резерве\&. Если задано менее чем N URI, то URI будут использованы более одного раза, так чтобы были задействованы все N соединений одновременно\&. Количество соединений к одному и тому же хосту ограничивается параметром
\fB\-\-max\-connection\-per\-server\fR\&. Смотрите также параметр
\fB\-\-min\-split\-size\fR\&. По умолчанию:
\fI5\fR
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
Некоторые Metalink регламентируют количество серверов для соединения\&. aria2 строго соблюдает это\&. Это значит, что если Metalink определяет атрибут maxconnections меньше чем N, то aria2 использует значение атрибута maxconnections вместо N\&.
.sp .5v
.RE
.PP
\fB\-\-stream\-piece\-selector\fR=SELECTOR
.RS 4
Указать алгоритм выбора блока, который используется в HTTP/FTP\-загрузке\&. Блок \- означает сегмент фиксированной длины, который загружается параллельно, в разделенной на части, загрузке\&. Если задано
\fIdefault\fR, то aria2 выберет блок так, чтобы это уменьшило количество установленных подключений\&. Это разумное поведение по умолчанию, поскольку установка подключения очень затратная операция\&. Если задано
\fIinorder\fR, то aria2 выберет блок, который имеет минимальный индекс\&. Index=0 означает первый из файла\&. Это будет полезно при просмотре фильма, в то время как он загружается\&. Параметр
\fB\-\-enable\-http\-pipelining\fR
может быть полезен для снижения накладных расходов при повторном подключении\&. Обратите внимание, что aria2 принимает на обработку параметр
\fB\-\-min\-split\-size\fR, так что необходимо будет указать разумное значение параметра
\fB\-\-min\-split\-size\fR\&. Если задано
\fIgeom\fR, то aria2 вначале выберет блок с минимальным индексом, как при
\fIinorder\fR, однако она сохранит экспоненциально большую область от ранее выбранного блока\&. Это уменьшит количество установленных подключений и в то же время это позволит в первую очередь загрузить начало файла\&. Это будет полезно при просмотре фильма, в то время как он загружается\&. По умолчанию:
\fIdefault\fR
.RE
.PP
\fB\-t\fR, \fB\-\-timeout\fR=SEC
.RS 4
Задать время ожидания в секундах\&. По умолчанию:
\fI60\fR
.RE
.PP
\fB\-\-uri\-selector\fR=SELECTOR
.RS 4
Указать алгоритм выбора URI\&. Возможные значения:
\fIinorder\fR,
\fIfeedback\fR
и
\fIadaptive\fR\&. Если задано
\fIinorder\fR, то URI проверяются в порядке представления в списке URI\&. Если задано
\fIfeedback\fR, aria2 использует скорость загрузки, которая наблюдалась в предыдущих загрузках, и выбирает самый быстрый сервер в списке URI\&. Это также эффективно исключает мертвые зеркала\&. Наблюдаемая скорость загрузки является частью профиля функционирования сервера, упомянутой в параметрах
\fB\-\-server\-stat\-of\fR
и
\fB\-\-server\-stat\-if\fR\&. Если задано
\fIadaptive\fR, выбирается одно из лучших зеркал для первого и резервного соединений\&. Дополнительно, возвращаются зеркала, которые пока не были проверены, и, если каждое из них уже проверено, возвращаются зеркала, которые должны быть проверены снова\&. Иначе зеркала больше не выбираются\&. Подобно
\fIfeedback\fR, используются профиль функционирования сервера\&. По умолчанию:
\fIfeedback\fR
.RE
.SS "Специфические параметры HTTP"
.PP
\fB\-\-ca\-certificate\fR=FILE
.RS 4
Использовать сертификат авторизации в FILE для проверки узлов\&. Сертификат должен быть в PEM\-формате и содержать многоразовые CA\-сертификаты\&. Используйте параметр
\fB\-\-check\-certificate\fR, чтобы разрешить проверку\&.
.RE
.PP
\fB\-\-certificate\fR=FILE
.RS 4
Использовать клиентский сертификат в FILE\&. Сертификат должен быть в PEM\-формате\&. Вы можете использовать параметр
\fB\-\-private\-key\fR, чтобы указать закрытый ключ\&.
.RE
.PP
\fB\-\-check\-certificate\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Проверять каждый из используемых сертификатов, которые указаны в параметре
\fB\-\-ca\-certificate\fR\&. По умолчанию:
\fItrue\fR
.RE
.PP
\fB\-\-http\-accept\-gzip\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Посылать "Accept: deflate, gzip" в запросе\-заголовке и добавлять в ответ, если удаленный сервер ответит "Content\-Encoding: gzip" или "Content\-Encoding: deflate"\&. По умолчанию: \*(Aqfalse
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
Некоторые серверы отвечают "Content\-Encoding: gzip" для файлов, которые сами по себе сжаты (gzipped)\&. aria2 добавляет их, так или иначе, из\-за заголовка ответа\&.
.sp .5v
.RE
.PP
\fB\-\-http\-auth\-challenge\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Отправлять заголовок HTTP\-авторизации только тогда, когда он запрошен с сервера\&. Если задано
\fIfalse\fR, тогда заголовок авторизации всегда отправляется на сервер\&. Существует исключение: если имя пользователя и пароль являются встроенными в URI, то заголовок авторизации всегда отправляется на сервер, независимо от этого параметра\&. По умолчанию:
\fIfalse\fR
.RE
.PP
\fB\-\-http\-no\-cache\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Отправлять заголовок Cache\-Control: no\-cache и Pragma: no\-cache, чтобы избежать кэширования содержимого\&. Если задано
\fIfalse\fR, то эти заголовки не посылаются, и вы можете добавить любую директиву к заголовку Cache\-Control с помощью параметра
\fB\-\-header\fR\&. По умолчанию:
\fItrue\fR
.RE
.PP
\fB\-\-http\-user\fR=USER
.RS 4
Задать пользователя для HTTP\&. Влияет на все URI\&.
.RE
.PP
\fB\-\-http\-passwd\fR=PASSWD
.RS 4
Задать пароль для HTTP\&. Влияет на все URI\&.
.RE
.PP
\fB\-\-http\-proxy\fR=PROXY
.RS 4
Использовать указанный прокси\-сервер для HTTP\&. Ранее указанный адрес можно стереть, указав ""\&. Смотрите также параметр
\fB\-\-all\-proxy\fR\&. Влияет на все URI\&. Формат PROXY \- [http://][ПОЛЬЗОВАТЕЛЬ:ПАРОЛЬ@]ХОСТ[:ПОРТ]\&.
.RE
.PP
\fB\-\-http\-proxy\-passwd\fR=PASSWD
.RS 4
Задать пароль для параметра
\fB\-\-http\-proxy\fR\&.
.RE
.PP
\fB\-\-http\-proxy\-user\fR=USER
.RS 4
Задать пользователя для параметра
\fB\-\-http\-proxy\fR\&.
.RE
.PP
\fB\-\-https\-proxy\fR=PROXY
.RS 4
Использовать указанный прокси\-сервер для HTTPS\&. Ранее указанный адрес можно стереть, указав ""\&. Смотрите также параметр
\fB\-\-all\-proxy\fR\&. Влияет на все URI\&. Формат PROXY \- [http://][ПОЛЬЗОВАТЕЛЬ:ПАРОЛЬ@]ХОСТ[:ПОРТ]\&.
.RE
.PP
\fB\-\-https\-proxy\-passwd\fR=PASSWD
.RS 4
Задать пароль для параметра
\fB\-\-https\-proxy\fR\&.
.RE
.PP
\fB\-\-https\-proxy\-user\fR=USER
.RS 4
Задать пользователя для параметра
\fB\-\-https\-proxy\fR\&.
.RE
.PP
\fB\-\-private\-key\fR=FILE
.RS 4
Использовать закрытый ключ в FILE\&. Закрытый ключ должен быть дешифрованным и в PEM\-формате\&. Режим работы с исходно зашифрованным закрытым ключом не определен\&. Смотрите также параметр
\fB\-\-certificate\fR\&.
.RE
.PP
\fB\-\-referer\fR=REFERER
.RS 4
Задать источника запроса\&. Влияет на все URI\&.
.RE
.PP
\fB\-\-enable\-http\-keep\-alive\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Включить HTTP/1\&.1 постоянное соединение\&. По умолчанию:
\fItrue\fR
.RE
.PP
\fB\-\-enable\-http\-pipelining\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Включить конвейерную обработку HTTP/1\&.1\&. По умолчанию:
\fIfalse\fR
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
С точки зрения производительности, как правило, нет преимущества от включения этого параметра\&.
.sp .5v
.RE
.PP
\fB\-\-header\fR=HEADER
.RS 4
Добавлять HEADER к HTTP запросу\-заголовку\&. Вы можете использовать этот параметр повторно, чтоб указать более одного заголовка: aria2c
\fB\-\-header\fR="X\-A: b78"
\fB\-\-header\fR="X\-B: 9J1" "http://host/file"
.RE
.PP
\fB\-\-load\-cookies\fR=FILE
.RS 4
Загружать куки\-файл из FILE, используя форматы Firefox3 (SQLite3), Chromium/Google Chrome (SQLite3) и Mozilla/Firefox(1\&.x/2\&.x)/Netscape\&.
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
Если aria2 собрана без libsqlite3, то форматы куки\-файлов Firefox3 и Chromium/Google Chrome не поддерживаются\&.
.sp .5v
.RE
.PP
\fB\-\-save\-cookies\fR=FILE
.RS 4
Сохранить куки в FILE формате Mozilla/Firefox(1\&.x/2\&.x)/Netscape\&. Если FILE уже существует, то он будет перезаписан\&. Куки\-сессия также сохранится, и значение ее окончания будет трактоваться как 0\&. Возможные значения:
\fI/путь/к/файлу\fR
.RE
.PP
\fB\-\-use\-head\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Использовать метод HEAD для первого запроса к HTTP серверу\&. По умолчанию:
\fIfalse\fR
.RE
.PP
\fB\-U\fR, \fB\-\-user\-agent\fR=USER_AGENT
.RS 4
Задать клиентское приложение для HTTP(S)\-загрузок\&. По умолчанию:
\fIaria2/$VERSION\fR, $VERSION заменяется на версию пакета\&.
.RE
.SS "Специфические параметры FTP"
.PP
\fB\-\-ftp\-user\fR=USER
.RS 4
Задать пользователя для FTP\&. Влияет на все URI\&. По умолчанию:
\fIanonymous\fR
.RE
.PP
\fB\-\-ftp\-passwd\fR=PASSWD
.RS 4
Задать пароль для FTP\&. Влияет на все URI\&. Если имя пользователя встроено, но пароль отсутствует в URI, то aria2 пытается использовать пароль из \&.netrc\&. Если пароль найден в \&.netrc, то он используется\&. Если нет, используется пароль, указанный в этом параметре\&. По умолчанию:
\fIARIA2USER@\fR
.RE
.PP
\fB\-p\fR, \fB\-\-ftp\-pasv\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Использовать пассивный режим FTP\&. Если задано
\fIfalse\fR, то будет использован активный режим\&. По умолчанию:
\fItrue\fR
.RE
.PP
\fB\-\-ftp\-proxy\fR=PROXY
.RS 4
Использовать указанный прокси\-сервер для FTP\&. Ранее указанный адрес можно стереть, указав ""\&. Смотрите также параметр
\fB\-\-all\-proxy\fR\&. Влияет на все URI\&. Формат PROXY \- [http://][ПОЛЬЗОВАТЕЛЬ:ПАРОЛЬ@]ХОСТ[:ПОРТ]
.RE
.PP
\fB\-\-ftp\-proxy\-passwd\fR=PASSWD
.RS 4
Задать пароль для параметра
\fB\-\-ftp\-proxy\fR\&.
.RE
.PP
\fB\-\-ftp\-proxy\-user\fR=USER
.RS 4
Задать пользователя для параметра
\fB\-\-ftp\-proxy\fR\&.
.RE
.PP
\fB\-\-ftp\-type\fR=TYPE
.RS 4
Задать тип передачи для FTP\&. TYPE может быть один из двух:
\fIbinary\fR
или
\fIascii\fR\&. По умолчанию:
\fIbinary\fR
.RE
.PP
\fB\-\-ftp\-reuse\-connection\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Повторно использовать FTP соединение\&. По умолчанию:
\fItrue\fR
.RE
.SS "Параметры BitTorrent/Metalink"
.PP
\fB\-\-select\-file\fR=INDEX\&...
.RS 4
Задать файл для загрузки по заданному индексу\&. Вы можете найти индекс файла, используя параметр
\fB\-\-show\-files\fR\&. Составной индекс можно указать, используя ",", например:
\fI3,6\fR\&. Вы можете также использовать "\-", чтобы указать диапазон:
\fI1\-5\fR\&. "," и "\-" могут быть использованы вместе:
\fI1\-5,8,9\fR\&. Когда используется с параметром \-M, индекс может сильно зависеть от запроса (смотрите параметры
\fB\-\-metalink\-\fR*)\&.
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
В многофайловом торренте, смежные файлы, указанные в этом параметре также могут быть загружены\&. Это не ошибка, а особенность утилиты\&. Одиночный блок данных может включать несколько файлов или часть файла, и aria2 запишет блок данных соответствующего файла\&.
.sp .5v
.RE
.PP
\fB\-S\fR, \fB\-\-show\-files\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Вывести список файлов из \&.torrent, \&.meta4 или \&.metalink и выйти\&. Для файла \&.torrent будет выведена более детальная информация (информация по хэшу, размер блока и др\&.)\&.
.RE
.SS "Специфические параметры BitTorrent"
.PP
\fB\-\-bt\-enable\-lpd\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Включить поиск локальных пиров\&. Если в torrent\-файле установлен приватный признак, то aria2 не будет использовать эту возможность, даже если задано
\fItrue\fR\&. По умолчанию:
\fIfalse\fR
.RE
.PP
\fB\-\-bt\-exclude\-tracker\fR=URI[,\&...]
.RS 4
Разделенный запятыми список URI анонса BitTorrent\-трекера, которые будут исключены\&. Вы можете использовать специальное значение "\fB", которое соответствует всем URI, таким образом, исключаются все URI анонса\&. При указании "\fR" в оболочке командной строке, не забывайте, экранировать или брать в кавычки\&. Смотрите также параметр
\fB\-\-bt\-tracker\fR\&.
.RE
.PP
\fB\-\-bt\-external\-ip\fR=IPADDRESS
.RS 4
Указать внешний IP\-адрес BitTorrent\-трекера для отчета\&. Не смотря на то, что эта функция названа "external" ("внешний"), она может принимать любой IP\-адрес\&. IPADDRESS должен быть числовым IP\-адресом\&.
.RE
.PP
\fB\-\-bt\-hash\-check\-seed\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Если задано
\fItrue\fR, то после проверки хэша с использованием параметра
\fB\-\-check\-integrity\fR, и когда файл загружен полностью, продолжается раздача файла\&. Если вы хотите проверить файл и загрузить его только если он поврежден или не загружен полностью, то задайте этот параметр как
\fIfalse\fR\&. Этот параметр влияет лишь на BitTorrent\-загрузки\&. По умолчанию:
\fItrue\fR
.RE
.PP
\fB\-\-bt\-lpd\-interface\fR=INTERFACE
.RS 4
Использовать для поиска локальных пиров заданный интерфейс\&. Если этот параметр не указан, используется интерфейс по умолчанию\&. Можно указать имя интерфейса и IP\-адрес\&. Возможные значения: интерфейс, IP\-адрес\&.
.RE
.PP
\fB\-\-bt\-max\-open\-files\fR=NUM
.RS 4
Указать максимальное количество файлов для открытия в каждой BitTorrent\-загрузке\&. По умолчанию:
\fI100\fR
.RE
.PP
\fB\-\-bt\-max\-peers\fR=NUM
.RS 4
Указать максимальное количество узлов для каждого торрента\&.
\fI0\fR
означает неограниченно\&. Смотрите также параметр
\fB\-\-bt\-request\-peer\-speed\-limit\fR\&. По умолчанию:
\fI55\fR
.RE
.PP
\fB\-\-bt\-metadata\-only\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Загрузить только метаданные\&. Файл(ы), описывающий метаданные не должен быть загружен\&. Этот параметр эффективен, только если используется BitTorrent Magnet\-ссылка\&. Смотрите также параметр
\fB\-\-bt\-save\-metadata\fR\&. По умолчанию:
\fIfalse\fR
.RE
.PP
\fB\-\-bt\-min\-crypto\-level\fR=\fIplain\fR|\fIarc4\fR
.RS 4
Задать минимальный уровень метода шифрования\&. Если узел поддерживает несколько методов шифрования, aria2 выбирает наименьший, который удовлетворяет заданный уровень\&. По умолчанию:
\fIplain\fR
.RE
.PP
\fB\-\-bt\-prioritize\-piece\fR=\fIhead\fR[=SIZE],\fItail\fR[=SIZE]
.RS 4
Пытаться загрузить сначала первую и последнюю части каждого файла\&. Это бывает полезно для предварительного просмотра файлов\&. Аргумент может содержать 2 ключевых слова:
\fIhead\fR
и
\fItail\fR\&. Для включения обоих, необходимо разделить их запятой\&. Ключевые слова принимают один параметр, SIZE\&. Например, если указано
\fIhead\fR=SIZE, части, в пределах первых SIZE байт каждого файла, получат повышенный приоритет\&.
\fItail\fR=SIZE обозначает диапазон из последних SIZE байт каждого файла\&. SIZE может включать букву
\fIK\fR
или
\fIM\fR
для обозначения размера в килобайтах или мегабайтах, соответственно (1K = 1024, 1M = 1024K)\&. Если SIZE пропущено, то будет использовано по умолчанию значение: SIZE=1M\&.
.RE
.PP
\fB\-\-bt\-remove\-unselected\-file\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Удалить невыбранные файлы, когда завершена загрузка в BitTorrent\&. Для выбора файлов используйте параметр
\fB\-\-select\-file\fR\&. Если не использовался этот параметр, то предполагается, что все файлы выбраны\&. Пожалуйста, используйте этот параметр внимательно, так как это фактически удалит файлы с вашего диска\&. По умолчанию:
\fIfalse\fR
.RE
.PP
\fB\-\-bt\-require\-crypto\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Если задано
\fItrue\fR, aria2 не принимает и не устанавливает соединение с унаследованным BitTorrent handshake\-сообщением (рукопожатие) (BitTorrent протокол)\&. Таким образом, aria2 всегда использует обфускацию handshake\-сообщения\&. По умолчанию:
\fIfalse\fR
.RE
.PP
\fB\-\-bt\-request\-peer\-speed\-limit\fR=SPEED
.RS 4
Если итоговая скорость загрузки каждого торрента, ниже чем SPEED, aria2 временно увеличивает количество узлов, пытаясь увеличить скорость загрузки\&. Настройка этого параметра с выбранной вами скоростью загрузки может, в некоторых случаях, увеличить вашу скорость загрузки\&. Вы можете добавить
\fIK\fR
или
\fIM\fR(1K = 1024, 1M = 1024K)\&. По умолчанию:
\fI50K\fR
.RE
.PP
\fB\-\-bt\-save\-metadata\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Сохранить метаданные как файл \&.torrent\&. Этот параметр эффективен только если используется BitTorrent Magnet\-ссылка\&. Имя файла шестнадцатеричное представление хэша с расширением \&.torrent\&. Файл сохранится в каталог, в тот же самый, куда сохранится загружаемый файл\&. Если тот же самый файл уже существует, метаданные не сохранятся\&. Смотрите также параметр
\fB\-\-bt\-metadata\-only\fR\&. По умолчанию:
\fIfalse\fR
.RE
.PP
\fB\-\-bt\-seed\-unverified\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Раздавать первоначально загруженные файлы без проверки хэшей блоков\&. По умолчанию:
\fIfalse\fR
.RE
.PP
\fB\-\-bt\-stop\-timeout\fR=SEC
.RS 4
Остановить BitTorrent загрузку, если скорость загрузки равна 0 на протяжении SEC секунд\&. Если задано
\fI0\fR, то эта возможность не будет использоваться\&. По умолчанию:
\fI0\fR
.RE
.PP
\fB\-\-bt\-tracker\fR=URI[,\&...]
.RS 4
Разделенный запятыми список дополнительных URI анонса BitTorrent\-трекеров\&. На эти URI не действует параметр
\fB\-\-bt\-exclude\-tracker\fR, потому что они добавляются после URI, указанных в параметре
\fB\-\-bt\-exclude\-tracker\fR, которые исключаются\&.
.RE
.PP
\fB\-\-bt\-tracker\-connect\-timeout\fR=SEC
.RS 4
Задать время ожидания в секундах для установки соединения с трекером\&. После установки соединения, это параметр станет не действительным, а вместо него будет использован
\fB\-\-bt\-tracker\-timeout\fR\&. По умолчанию:
\fI60\fR
.RE
.PP
\fB\-\-bt\-tracker\-interval\fR=SEC
.RS 4
Задать интервал в секундах между запросами трекера\&. Это полностью отменяет значение интервала и aria2 использует только это значение и игнорирует минимальный интервал и значение интервала в ответе трекера\&. Если задан
\fI0\fR, aria2 определяет интервал, основываясь на ответе трекера и прогрессе загрузки\&. По умолчанию:
\fI0\fR
.RE
.PP
\fB\-\-bt\-tracker\-timeout\fR=SEC
.RS 4
Задать время ожидания в секундах\&. По умолчанию:
\fI60\fR
.RE
.PP
\fB\-\-dht\-entry\-point\fR=HOST:PORT
.RS 4
Задать хост и порт, как точку входа в IPv4 DHT сеть\&.
.RE
.PP
\fB\-\-dht\-entry\-point6\fR=HOST:PORT
.RS 4
Задать хост и порт, как точку входа в IPv6 DHT сеть\&.
.RE
.PP
\fB\-\-dht\-file\-path\fR=PATH
.RS 4
Заменять файл таблицы маршрутизации IPv4 DHT на PATH\&. По умолчанию:
\fI$HOME/\&.aria2/dht\&.dat\fR
.RE
.PP
\fB\-\-dht\-file\-path6\fR=PATH
.RS 4
Заменять файл таблицы маршрутизации IPv6 DHT на PATH\&. По умолчанию:
\fI$HOME/\&.aria2/dht\&.dat\fR
.RE
.PP
\fB\-\-dht\-listen\-addr6\fR=ADDR
.RS 4
Указать адрес привязки сокета для IPv6 DHT\&. Он должен быть глобальным IPv6 unicast\-адресом хоста\&.
.RE
.PP
\fB\-\-dht\-listen\-port\fR=PORT\&...
.RS 4
Задать прослушиваемый UDP\-порт для обоих IPv4 и IPv6 DHT\&. Несколько портов можно указать через ",", например:
\fI6881,6885\fR\&. Вы также можете использовать "\-" чтобы указать диапазон:
\fI6881\-6999\fR\&. "," и "\-" могут быть использованы вместе\&. По умолчанию:
\fI6881\-6999\fR
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
Удостоверьтесь, что указанные порты открыты для входящего UDP\-трафика\&.
.sp .5v
.RE
.PP
\fB\-\-dht\-message\-timeout\fR=SEC
.RS 4
Задать время ожидания в секундах\&. По умолчанию:
\fI10\fR
.RE
.PP
\fB\-\-enable\-dht\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Включить IPv4 DHT функциональность\&. Если в torrent\-файле задан приватный признак, aria2 не будет использовать DHT для загрузки, даже если установлен
\fItrue\fR\&. По умолчанию:
\fItrue\fR
.RE
.PP
\fB\-\-enable\-dht6\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Включить IPv6 DHT функциональность\&. Если в torrent\-файле задан приватный признак, aria2 не будет использовать DHT для загрузки, даже если установлен
\fItrue\fR\&. Используйте параметр
\fB\-\-dht\-listen\-port\fR
для указания прослушиваемого порта\&. Смотрите также параметр
\fB\-\-dht\-listen\-addr6\fR\&.
.RE
.PP
\fB\-\-enable\-peer\-exchange\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Включить расширение BitTorrent\-протокола для обмена списками участников\&. Если в torrent\-файле задан приватный признак, то эта возможность будет отключена, даже если установлен
\fItrue\fR\&. По умолчанию:
\fItrue\fR
.RE
.PP
\fB\-\-follow\-torrent\fR=\fItrue\fR|\fIfalse\fR|\fImem\fR
.RS 4
Если указать
\fItrue\fR
или
\fImem\fR, тогда загруженный файл, расширение которого \- "\&.torrent" или mime\-тип \- "application/x\-bittorrent", aria2 анализирует как torrent\-файл и загружает файлы, указанные в нем\&. Если указано
\fImem\fR, тогда torrent\-файл не записывается на диск, а содержится в памяти\&. Если указано
\fIfalse\fR, действия, упомянутые выше, не совершаются\&. По умолчанию:
\fItrue\fR
.RE
.PP
\fB\-O\fR, \fB\-\-index\-out\fR=INDEX=PATH
.RS 4
Задать путь к файлу PATH с индексом INDEX\&. Вы можете найти индекс файла, используя параметр
\fB\-\-show\-files\fR\&. PATH является относительным путем к тому, который указан в параметре
\fB\-\-dir\fR\&. Вы можете использовать этот параметр много раз\&. Используйте этот параметр, когда хотите указать имена выходных файлов для BitTorrent\-загрузок\&.
.RE
.PP
\fB\-\-listen\-port\fR=PORT\&...
.RS 4
Задать номер TCP\-порта для BitTorrent\-загрузок\&. Несколько портов можно указать, используя ",", например:
\fI6881,6885\fR\&. Вы также можете использовать "\-", чтобы указать диапазон:
\fI6881\-6999\fR\&. "," и "\-" могут быть использованы вместе:
\fI6881\-6889,6999\fR\&. По умолчанию:
\fI6881\-6999\fR
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
Удостоверьтесь, что указанные порты открыты для входящего TCP\-трафика\&.
.sp .5v
.RE
.PP
\fB\-\-max\-overall\-upload\-limit\fR=SPEED
.RS 4
Задать максимальную общую скорость отдачи в байтах/сек\&.
\fI0\fR
значит неограниченно\&. Вы можете добавить
\fIK\fR
или
\fIM\fR(1K = 1024, 1M = 1024K)\&. Чтобы ограничить скорость отдачи для узла торрента, используйте параметр
\fB\-\-max\-upload\-limit\fR\&. По умолчанию:
\fI0\fR
.RE
.PP
\fB\-u\fR, \fB\-\-max\-upload\-limit\fR=SPEED
.RS 4
Задать максимальную скорость отдачи каждого узла торрента в байтах/сек\&.
\fI0\fR
значит неограниченно\&. Вы можете добавить
\fIK\fR
или
\fIM\fR(1K = 1024, 1M = 1024K)\&. Чтобы ограничить общую скорость отдачи, используйте параметр
\fB\-\-max\-overall\-upload\-limit\fR\&. По умолчанию:
\fI0\fR
.RE
.PP
\fB\-\-peer\-id\-prefix\fR=PEER_ID_PREFIX
.RS 4
Указать префикс для ID узла\&. ID узла в BitTorrent имеет размер 20 байт\&. Если будет указано более 20 байт, то только первые 20 будут использоваться, если будет указано меньше 20, то они будут дополнены случайными данными до 20 байт\&. По умолчанию:
\fIaria2/$VERSION\fR, $VERSION заменяется на версию пакета\&.
.RE
.PP
\fB\-\-seed\-ratio\fR=RATIO
.RS 4
Указать рейтинг\&. Сидировать завершенные торренты, пока рейтинг не станет больше RATIO\&. Очень рекомендуется указать тут равный или больший
\fI1\&.0\fR\&. Указать
\fI0\&.0\fR, если вы планируете сидировать независимо от рейтинга\&. Если указан параметр
\fB\-\-seed\-time\fR
вместе с этим параметром, сидирование закончится тогда, когда хотя бы одно условие будет удовлетворено\&. По умолчанию:
\fI1\&.0\fR
.RE
.PP
\fB\-\-seed\-time\fR=MINUTES
.RS 4
Указать время сидирования (раздачи) в минутах\&. Смотрите также параметр
\fB\-\-seed\-ratio\fR\&.
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
Указанный \fB\-\-seed\-time\fR=\fI0\fR отключает сидирование после завершения загрузки\&.
.sp .5v
.RE
.PP
\fB\-T\fR, \fB\-\-torrent\-file\fR=TORRENT_FILE
.RS 4
Путь к файлу \&.torrent\&. Вы не обязаны использовать этот параметр, т\&.к\&. файл \&.torrent можно указать без
\fB\-T\fR\&.
.RE
.SS "Специфические параметры Metalink"
.PP
\fB\-\-follow\-metalink\fR=\fItrue\fR|\fIfalse\fR|\fImem\fR
.RS 4
Если указано
\fItrue\fR
или
\fImem\fR
и когда загруженный файл имеет расширение "\&.meta4" или "\&.metalink", или mime\-тип "application/metalink4+xml" или "application/metalink+xml", aria2 считает его metalink\-файлом и загружает упомянутые в нем файлы\&. Если указано
\fImem\fR, то metalink\-файл не сохраняется на диск, а просто хранится в памяти\&. Если указано
\fIfalse\fR, то вышеприведенная операция не производится\&. По умолчанию:
\fItrue\fR
.RE
.PP
\fB\-\-metalink\-base\-uri\fR=URI
.RS 4
Указать основной URI для разрешения относительных URI в элементе metalink:url и metalink:metaurl в metalink\-файле, сохраненном на локальном диске\&. Если URI указывает на каталог, то URI должен заканчиваться на
\fI/\fR\&.
.RE
.PP
\fB\-M\fR, \fB\-\-metalink\-file\fR=METALINK_FILE
.RS 4
Путь к файлу \&.meta4 и \&.metalink\&. Читает ввод из stdin, если в качестве имени файла указано
\fI\-\fR\&. Вы не обязаны использовать этот параметр, т\&.к\&. файлы \&.metalink можно указать без
\fB\-M\fR\&.
.RE
.PP
\fB\-\-metalink\-language\fR=LANGUAGE
.RS 4
Язык файла для загрузки\&.
.RE
.PP
\fB\-\-metalink\-location\fR=LOCATION[,\&...]
.RS 4
Местонахождение предпочитаемого сервера\&. Список, разделенный запятыми, допустимых местонахождений, например,
\fIjp,us\fR\&.
.RE
.PP
\fB\-\-metalink\-os\fR=OS
.RS 4
Целевая операционная система файла для загрузки\&.
.RE
.PP
\fB\-\-metalink\-version\fR=VERSION
.RS 4
Версия файла для загрузки\&.
.RE
.PP
\fB\-\-metalink\-preferred\-protocol\fR=PROTO
.RS 4
Указать предпочитаемый протокол\&. Возможные значения:
\fIhttp\fR,
\fIhttps\fR,
\fIftp\fR
и
\fInone\fR\&. Указать
\fInone\fR
для отключения этой возможности\&. По умолчанию:
\fInone\fR
.RE
.PP
\fB\-\-metalink\-enable\-unique\-protocol\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Если задано
\fItrue\fR, а в metalink\-файле доступно несколько протоколов, то aria2 использует один из них\&. Используйте параметр
\fB\-\-metalink\-preferred\-protocol\fR, чтобы указать предпочитаемый протокол\&. По умолчанию:
\fItrue\fR
.RE
.SS "Параметры RPC"
.PP
\fB\-\-enable\-rpc\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Включить JSON\-RPC/XML\-RPC\-сервер\&. Настоятельно рекомендуется указать имя пользователя и пароль, используя параметры
\fB\-\-rpc\-user\fR
и
\fB\-\-rpc\-passwd\fR\&. Смотрите также параметр
\fB\-\-rpc\-listen\-port\fR\&. По умолчанию:
\fIfalse\fR
.RE
.PP
\fB\-\-pause\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Приостановка загрузки после добавления\&. Этот параметр действенен только, когда задан
\fB\-\-enable\-rpc\fR=\fItrue\fR\&. По умолчанию:
\fIfalse\fR
.RE
.PP
\fB\-\-rpc\-allow\-origin\-all\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Добавить заголовок Access\-Control\-Allow\-Origin со значением
\fI*\fR
в RPC\-ответе\&. По умолчанию:
\fIfalse\fR
.RE
.PP
\fB\-\-rpc\-listen\-all\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Слушать входящие JSON\-RPC/XML\-RPC\-запросы на всех сетевых интерфейсах\&. Если указано
\fIfalse\fR, слушать только на локальном петлевом интерфейсе (loopback)\&. По умолчанию:
\fIfalse\fR
.RE
.PP
\fB\-\-rpc\-listen\-port\fR=PORT
.RS 4
Указать номер порта, для прослушивания JSON\-RPC/XML\-RPC\-сервером\&. Возможные значения:
\fI1024\fR\-\fI65535\fR\&. По умолчанию:
\fI6800\fR
.RE
.PP
\fB\-\-rpc\-max\-request\-size\fR=SIZE
.RS 4
Задать максимальный размер JSON\-RPC/XML\-RPC\-запроса\&. Если aria2 выявит запрос с размером большим, чем SIZE байт, тогда соединение будет отклонено\&. По умолчанию:
\fI2M\fR
.RE
.PP
\fB\-\-rpc\-passwd\fR=PASSWD
.RS 4
Задать JSON\-RPC/XML\-RPC пароль\&.
.RE
.PP
\fB\-\-rpc\-user\fR=USER
.RS 4
Задать JSON\-RPC/XML\-RPC пользователя\&.
.RE
.SS "Дополнительные параметры"
.PP
\fB\-\-allow\-overwrite\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Повторно запустить загрузку с нуля, если соответствующий контрольный файл отсутствует\&. Смотрите также параметр
\fB\-\-auto\-file\-renaming\fR\&. По умолчанию:
\fIfalse\fR
.RE
.PP
\fB\-\-allow\-piece\-length\-change\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Если задано
\fIfalse\fR, aria2 прерывает загрузку, когда длина блока отлична от той, которая находится в контрольном файле\&. Если задано
\fItrue\fR, вы можете продолжать, однако некоторый прогресс загрузки будет потерян\&. По умолчанию:
\fIfalse\fR
.RE
.PP
\fB\-\-always\-resume\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Всегда возобновлять загрузку\&. Если задано
\fItrue\fR, aria2 всегда пытается возобновить загрузку и если это не возможно, прерывает ее\&. Если задано
\fIfalse\fR, тогда для всех заданных URI не поддерживается возобновление загрузки, или aria2 столкнется с невозможностью возобновления загрузки URI
\fIN\fR\-ое количество раз (значение
\fIN\fR
указывается в параметре
\fB\-\-max\-resume\-failure\-tries)\fR\&. По умолчанию:
\fItrue\fR
.RE
.PP
\fB\-\-async\-dns\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Включить асинхронный DNS\&. По умолчанию:
\fItrue\fR
.RE
.PP
\fB\-\-async\-dns\-server\fR=IPADDRESS[,\&...]
.RS 4
Разделенный запятыми список адресов DNS\-серверов, которые используют асинхронный DNS\-преобразователь\&. Обычно асинхронный DNS\-преобразователь читает адреса DNS\-серверов из
\fI/etc/resolv\&.conf\fR\&. Когда используется этот параметр, то используются DNS\-серверы, указанные в параметре вместо указанных в
\fI/etc/resolv\&.conf\fR\&. Вы можете указать оба IPv4 и IPv6 адреса\&. Этот параметр полезен, когда в системе нет
\fI/etc/resolv\&.conf\fR
и у пользователя нет прав на его создание\&.
.RE
.PP
\fB\-\-auto\-file\-renaming\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Переименовать файл, если такой уже существует\&. Этот параметр работает только для HTTP(S)/FTP\-загрузок\&. К имени файла будет добавлена точка и число от 1 до 9999\&. По умолчанию:
\fItrue\fR
.RE
.PP
\fB\-\-auto\-save\-interval\fR=SEC
.RS 4
Сохранять контрольный файл (*\&.aria2) каждые SEC секунд\&. Если задано
\fI0\fR, тогда контрольный файл не сохраняется на протяжении загрузки\&. aria2 сохраняет контрольный файл тогда, когда останавливается, не смотря на значение\&. Возможные значения: от
\fI0\fR
до
\fI600\fR\&. По умолчанию:
\fI60\fR
.RE
.PP
\fB\-\-conditional\-get\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Загружать файл только когда локальный файл старше, чем удаленный\&. Эта функция работает только для HTTP(S)\-загрузок\&. Это не работает, если размер файла указан в Metalink\&. Это также игнорирует заголовок Content\-Disposition\&. Если контрольный файл существует, то этот параметр игнорируется\&. Эта функция использует заголовок If\-Modified\-Since, как условие для получения только нового файла\&. При получении времени модификации локального файла, используется указанное пользователем имя файла (см\&. параметр
\fB\-\-out\fR) или часть имени файла в URI, если
\fB\-\-out\fR
не указан\&. Для перезаписи существующего файла необходим параметр
\fB\-\-allow\-overwrite\fR\&. По умолчанию:
\fIfalse\fR
.RE
.PP
\fB\-\-conf\-path\fR=PATH
.RS 4
Сменить путь к файлу конфигурации на PATH\&. По умолчанию:
\fI$HOME/\&.aria2/aria2\&.conf\fR
.RE
.PP
\fB\-D\fR, \fB\-\-daemon\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Запустить как демон (фоновый процесс)\&. Текущий рабочий каталог будет заменен на
\fI/\fR, а стандартный ввод, стандартный вывод, стандартный вывод ошибок будут перенаправлены на
\fI/dev/null\fR\&. По умолчанию:
\fIfalse\fR
.RE
.PP
\fB\-\-deferred\-input\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Если задано
\fItrue\fR, aria2 при запуске не считывает все URI и параметры из файла, указанного в параметре
\fB\-i\fR, а считывает их позже отдельно, когда это нужно\&. Это может сократить использование памяти, если во входном файле содержится много URI для загрузки\&. Если задано
\fIfalse\fR, aria2 при запуске считывает все URI и параметры\&. По умолчанию:
\fIfalse\fR
.RE
.PP
\fB\-\-disable\-ipv6\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Отключить IPv6\&. Это полезно, если вы используете поврежденный DNS и хотите избежать ужасно медленного поиска AAAA\-записи\&. По умолчанию:
\fIfalse\fR
.RE
.PP
\fB\-\-download\-result\fR=OPT
.RS 4
Этот параметр изменяет формат сообщения "Результаты загрузки"\&. Если OPT задан как
\fIdefault\fR, то отображается GID, статус, средняя скорость загрузки и путь/URI\&. Если загружается множество файлов, то отобразиться путь/URI первого запрашиваемого файла, а остальные пропускаются\&. Если OPT задан как
\fIfull\fR, то отображается GID, статус, средняя скорость загрузки, процент прогресса и путь/URI\&. Процент прогресса и путь/URI отобразиться для каждого запрашиваемого файла в отдельной строке\&. По умолчанию:
\fIdefault\fR
.RE
.PP
\fB\-\-enable\-async\-dns6\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Включить IPv6 разрешение имен в асинхронном DNS\-преобразователе\&. Этот параметр будет игнорироваться, если
\fB\-\-async\-dns\fR=\fIfalse\fR\&. По умолчанию:
\fIfalse\fR
.RE
.PP
\fB\-\-event\-poll\fR=POLL
.RS 4
Указать метод опроса событий\&. Возможные значения:
\fIepoll\fR,
\fIkqueue\fR,
\fIport\fR,
\fIpoll\fR
и
\fIselect\fR\&. Каждый метод
\fIepoll\fR,
\fIkqueue\fR,
\fIport\fR
и
\fIpoll\fR
доступен, если система поддерживает его\&.
\fIepoll\fR
доступен в современных дистрибутивах Linux\&.
\fIkqueue\fR
доступен в различных *BSD\-системах, включая Mac OS X\&.
\fIport\fR
доступен в Open Solaris\&. Значение по умолчанию может изменяться в зависимости от системы, которую вы используете\&.
.RE
.PP
\fB\-\-file\-allocation\fR=METHOD
.RS 4
Указать метод резервирования места для файла\&.
\fInone\fR
не происходит предварительное резервирование места для файла\&.
\fIprealloc\fR
\- предварительное резервирование места для файла перед началом загрузки\&. Это может продолжаться некоторое время, в зависимости от размера файла\&. Если вы используете новые файловые системы, наподобие ext4 (с поддержкой экстентов), btrfs, xfs или NTFS (только сборка MinGW) тогда лучше выбрать
\fIfalloc\fR\&. Так как они резервируют место под большие (на несколько Гигабайт) файлы почти мгновенно\&. Не используйте
\fIfalloc\fR
вместе с наследными файловыми системами, такими как ext3 и FAT32, потому что это будет продолжаться почти столько же времени, как и
\fIprealloc\fR, а также полностью заблокирует aria2, пока не закончится резервирование места\&.
\fIfalloc\fR
может быть недоступным, если ваша система не содержит функцию
\fBposix_fallocate\fR()\&. Возможные значения:
\fInone\fR,
\fIprealloc\fR,
\fIfalloc\fR\&. По умолчанию:
\fIprealloc\fR
.RE
.PP
\fB\-\-hash\-check\-only\fR[=true|false]
.RS 4
Если задано
\fItrue\fR, то после проверки хэша, используя параметр
\fB\-\-check\-integrity\fR, загрузка прервётся, в любом случае загрузка завершится\&. По умолчанию:
\fIfalse\fR
.RE
.PP
\fB\-\-human\-readable\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Выводить на консоль размеры и скорость в удобочитаемом формате (например, 1\&.2Ки, 3\&.4Ми)\&. По умолчанию:
\fItrue\fR
.RE
.PP
\fB\-\-interface\fR=INTERFACE
.RS 4
Привязать сокеты к заданному интерфейсу\&. Вы можете указать имя интерфейса, IP\-адрес и имя хоста\&. Возможные значения: имя интерфейса (например, eth0), IP\-адрес (например, 192\&.168\&.0\&.12), имя хоста (например, myhost)\&.
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
Если интерфейс имеет несколько адресов, то настоятельно рекомендуется указать IP\-адрес явно\&. Смотрите также \fB\-\-disable\-ipv6\fR\&. Если ваша система не имеет getifaddrs(), это параметр не принимает имя интерфейса\&.
.sp .5v
.RE
.PP
\fB\-\-max\-download\-result\fR=NUM
.RS 4
Задать максимальное количество результатов загрузок, которые находятся в памяти\&. Результаты загрузок \- завершенные/ошибка/удаленные загрузки\&. Результаты загрузок хранятся FIFO очереди, в которой может хранится NUM результатов загрузок\&. Когда очередь заполнена и появляется новый результат загрузки, то старейший результат загрузки удаляется из начала очереди, а новый добавляется в конец\&. Указание большого числа в этом параметре может привести к высокому потреблению памяти после тысяч загрузок\&. Значение 0 отключит сохранение результата загрузки\&. По умолчанию:
\fI1000\fR
.RE
.PP
\fB\-\-max\-resume\-failure\-tries\fR=N
.RS 4
Если параметр
\fB\-\-always\-resume\fR=\fIfalse\fR, aria2 загрузит файл с нуля, при обнаружении
\fIN\fR\-го URI, не поддерживающего возобновление\&. Если
\fIN\fR=\fI0\fR, то aria2 загрузит файл с нуля, когда все URI не поддерживают возобновление\&. Смотрите параметр
\fB\-\-always\-resume\fR\&. По умолчанию:
\fI0\fR
.RE
.PP
\fB\-\-log\-level\fR=LEVEL
.RS 4
Задать уровень вывода журнала событий\&. LEVEL может быть:
\fIdebug\fR,
\fIinfo\fR,
\fInotice\fR,
\fIwarn\fR
или
\fIerror\fR\&. По умолчанию:
\fIdebug\fR
.RE
.PP
\fB\-\-on\-bt\-download\-complete\fR=COMMAND
.RS 4
Для BitTorrent, в
\fB\-\-on\-download\-complete\fR
указывается команда, которая вызывается после завершение загрузки и окончания сидирования\&. С другой стороны, этот параметр определяет команду, которая будет выполнена после завершения загрузки, но до сидирования\&. Смотрите раздел
\fBПерехват сообщения\fR
для более подробной информации о COMMAND\&. Возможные значения:
\fI/путь/к/команде\fR
.RE
.PP
\fB\-\-on\-download\-complete\fR=COMMAND
.RS 4
Задать команду, которая будет выполнена после завершения загрузки\&. Смотрите раздел
\fBПерехват сообщения\fR
для более подробной информации о COMMAND\&. Смотрите также параметр
\fB\-\-on\-download\-stop\fR\&. Возможные значения:
\fI/путь/к/команде\fR
.RE
.PP
\fB\-\-on\-download\-error\fR=COMMAND
.RS 4
Задать команду, которая будет выполнена после того, как загрузка будет прервана из\-за ошибки\&. Смотрите раздел
\fBПерехват сообщения\fR
для более подробной информации о COMMAND\&. Смотрите также параметр
\fB\-\-on\-download\-stop\fR\&. Возможные значения:
\fI/путь/к/команде\fR
.RE
.PP
\fB\-\-on\-download\-pause\fR=COMMAND
.RS 4
Задать команду, которая будет выполнена после того, как загрузка будет приостановлена\&. Смотрите раздел
\fBПерехват сообщения\fR
для более подробной информации о COMMAND\&. Возможные значения:
\fI/путь/к/команде\fR
.RE
.PP
\fB\-\-on\-download\-start\fR=COMMAND
.RS 4
Задать команду, которая будет выполнена после того, как началась загрузка\&. Смотрите раздел
\fBПерехват сообщения\fR
для более подробной информации о COMMAND\&. Возможные значения:
\fI/путь/к/команде\fR
.RE
.PP
\fB\-\-on\-download\-stop\fR=COMMAND
.RS 4
Задать команду, которая будет выполнена после того, как загрузка остановлена\&. Вы можете изменить команду, которая будет выполнятся при определенном результате загрузки, используя параметры
\fB\-\-on\-download\-complete\fR
и
\fB\-\-on\-download\-error\fR\&. Если они указаны, то команда, определенная в этом параметре не будет выполнятся\&. Смотрите раздел
\fBПерехват сообщения\fR
для более подробной информации о COMMAND\&. Возможные значения:
\fI/путь/к/команде\fR
.RE
.PP
\fB\-\-piece\-length\fR=LENGTH
.RS 4
Задать длину блока для HTTP/FTP\-загрузок\&. Это является границей, когда aria2 разделяет файл на части\&. Все разделения происходят многократно по этой длине\&. Этот параметр будет игнорироваться при BitTorrent\-загрузках\&. Также будет игнорироваться, если Metalink\-файл содержит хэши блоков\&. По умолчанию:
\fI1M\fR
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
Возможный вариант использования параметра \fB\-\-piece\-length\fR \- изменение диапазона запроса в одном конвейерном HTTP\-запросе\&. Для включения конвейерной обработки HTTP используйте \fB\-\-enable\-http\-pipelining\fR\&.
.sp .5v
.RE
.PP
\fB\-\-show\-console\-readout\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Показывать консольный вывод\&. По умолчанию:
\fItrue\fR
.RE
.PP
\fB\-\-summary\-interval\fR=SEC
.RS 4
Задать интервал в секундах до вывода сообщения о прогрессе загрузки\&. Установка
\fI0\fR
запрещает вывод\&. По умолчанию:
\fI60\fR
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
В загрузках многофайлового торрента, по определенным смежным файлам также, которые размещены в части одного блока\&.
.sp .5v
.RE
.PP
\fB\-Z\fR, \fB\-\-force\-sequential\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Получить URI в последовательности командной строки и загрузить каждое URI в отдельной сессии, как в обычных утилитах загрузки командной строки\&. По умолчанию:
\fIfalse\fR
.RE
.PP
\fB\-\-max\-overall\-download\-limit\fR=SPEED
.RS 4
Задать максимальную общую скорость загрузки в байтах/сек\&.
\fI0\fR
значит неограниченно\&. Вы можете добавить
\fIK\fR
или
\fIM\fR(1K = 1024, 1M = 1024K)\&. Чтобы ограничить скорость загрузки для узла, используйте параметр
\fB\-\-max\-download\-limit\fR\&. По умолчанию:
\fI0\fR
.RE
.PP
\fB\-\-max\-download\-limit\fR=SPEED
.RS 4
Установить максимальную скорость каждого узла загрузки в байтах/сек\&.
\fI0\fR
значит неограниченно\&. Вы можете добавить
\fIK\fR
или
\fIM\fR(1K = 1024, 1M = 1024K)\&. Чтобы ограничить общую скорость загрузки, используйте параметр
\fB\-\-max\-overall\-download\-limit\fR\&. По умолчанию:
\fI0\fR
.RE
.PP
\fB\-\-no\-conf\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Отключить загрузку файла aria2\&.conf\&.
.RE
.PP
\fB\-\-no\-file\-allocation\-limit\fR=SIZE
.RS 4
Не резервируется место для файлов, размер которых меньше SIZE\&. Вы можете добавить
\fIK\fR
или
\fIM\fR(1K = 1024, 1M = 1024K)\&. По умолчанию:
\fI5M\fR
.RE
.PP
\fB\-P\fR, \fB\-\-parameterized\-uri\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Включить поддержку параметризованных URI\&. Вы можете указать набор частей:
\fIhttp://{sv1,sv2,sv3}/foo\&.iso\fR\&. Также вы можете указать числовую последовательность с шагом счетчика:
\fIhttp://host/image[000\-100:2]\&.img\fR\&. Шагом счетчика можно пренебречь\&. Если все URI не указывают на такой же файл, как во втором приведенном выше примере, то необходим параметр \-Z\&. По умолчанию:
\fIfalse\fR
.RE
.PP
\fB\-q\fR, \fB\-\-quiet\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Сделать aria2 молчаливой (без консольного вывода)\&. По умолчанию:
\fIfalse\fR
.RE
.PP
\fB\-\-realtime\-chunk\-checksum\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Подтверждать правильность блока данных путем вычисления контрольной суммы во время загрузки файла, если предусмотрена контрольная сумма блоков\&. По умолчанию:
\fItrue\fR
.RE
.PP
\fB\-\-remove\-control\-file\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Удалять контрольный файл перед загрузкой\&. При использовании с
\fB\-\-allow\-overwrite\fR=\fItrue\fR
файл всегда загружается с нуля\&. Это может понадобиться пользователям за прокси\-сервером, не поддерживающим возобновление загрузки\&.
.RE
.PP
\fB\-\-save\-session\fR=FILE
.RS 4
Сохранять ошибочные/незаконченные загрузки в FILE при выходе\&. Вы можете передать этот выходной файл aria2c с параметром
\fB\-i\fR
при перезапуске\&. Обратите внимание, что загрузки, добавленные через RPC\-методы
\fBaria2\&.addTorrent\fR,
\fBaria2\&.addMetalink\fR
и чьи метаданные не могут быть сохранены как файл, не будут сохраняться\&. Загрузки, удаленные с использованием
\fBaria2\&.remove\fR
и
\fBaria2\&.forceRemove\fR
не будут сохранены\&.
.RE
.PP
\fB\-\-stop\fR=SEC
.RS 4
Останавливать программу после того как пройдет SEC секунд\&. Если задано
\fI0\fR, эта возможность будет отключена\&. По умолчанию:
\fI0\fR
.RE
.PP
\fB\-\-stop\-with\-process\fR=PID
.RS 4
Остановить приложение, когда процесс с идентификационный номером PID не работает\&. Это полезно, если процесс aria2 запущен из родительского процесса\&. Родительский процесс может запустить aria2 со своим идентификационным номером и когда он (процесс) завершиться по какой\-то причине, aria2 может обнаружить это и самостоятельно завершиться\&.
.RE
.PP
\fB\-\-truncate\-console\-readout\fR[=\fItrue\fR|\fIfalse\fR]
.RS 4
Укорачивать консольный вывод, чтобы он поместился в одну строку\&. По умолчанию:
\fItrue\fR
.RE
.PP
\fB\-v\fR, \fB\-\-version\fR
.RS 4
Вывести номер версии, информацию об авторских правах, конфигурации и выйти\&.
.RE
.SS "Параметры, которые принимают аргументы"
.sp
Параметры, которые имеют значения в квадратных скобках ([]), могут принимать дополнительные (необязательные) аргументы\&. Обычно отсутствие аргумента эквивалентно \fItrue\fR\&. Если вы используется короткую форму параметров (например, \fI\-V\fR) и указываете аргумент, то имя параметра и его аргумент должны быть объедены (например, \fI\-Vfalse\fR)\&. Если будут вставлены пробелы между именем параметра и аргументом, то аргумент будет обрабатываться как URI, и это не то, что обычно вы ожидаете\&.
.SS "URI, MAGNET\-ССЫЛКА, TORRENT\-ФАЙЛ, METALINK\-ФАЙЛ"
.sp
Вы можете перечислить несколько URI в командной строке\&. Пока вы не указали параметр \fB\-Z\fR, все URI должны указывать на один и тот же файл или загрузка завершиться не удачно\&.
.sp
Вы можете указать произвольное количество BitTorrent Magnet URI\&. Обратите внимание, что они всегда будут обрабатываться как отдельная загрузка\&. Поддерживаются оба Info Hash (Информация о хэше), как закодированный 40 шестнадцатеричными символами, так и закодированный 32 символами Base32\-кодировки\&. Поддерживаются составные параметры "tr"\&. Т\&.к\&. в BitTorrent Magnet URI возможно присутствие символа "&", то настоятельно рекомендуется всегда заключать URI в одиночные(\*(Aq) или двойные(") кавычки\&. Так же настоятельно рекомендуется включить DHT, особенно когда параметр "tr" не указан\&. Смотрите http://www\&.bittorrent\&.org/beps/bep_0009\&.html для детальной информации по BitTorrent Magnet URI\&.
.sp
Вы также можете указать произвольное количество torrent\-файлов и Metalink\-документов, которые хранятся на локальном диске\&. Обратите внимание, что они всегда будут обрабатываться как отдельная загрузка\&. Поддерживаются оба формата: Metalink4 и Metalink версии 3\&.0\&.
.sp
Вы можете указать вместе, torrent\-файл с параметром \-T и URI\&. Сделав это, вы можете загружать файл, используя torrent\-рой и HTTP(S)/FTP\-сервер одновременно, пока данные из HTTP(S)/FTP выгружаются в torrent\-рой\&. Для однофайловых торрентов, URI может быть завершенным, который указывает на ресурс, или же если заканчиваться символом /, тогда name (имя) в torrent\-файле будет добавлено\&. Для многофайловых торентов, name (имя) и path (путь) в torrent\-файле будут добавлены из URI для каждого файла\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
Удостоверьтесь, что URI заключен в одинарные(\*(Aq) или двойные(") кавычки, если есть символ "&" или любые символы, которые имеют особое значение в командной оболочке\&.
.sp .5v
.RE
.SS "Возобновление загрузки"
.sp
Обычно, вы можете возобновить передачу, только запустив ту же самую команду (aria2c URI), которая выполнялась при предыдущей передаче, созданной aria2\&.
.sp
Если предыдущая передача создана веб\-браузером или wget\-подобным менеджером загрузки, тогда используйте параметр \fB\-c\fR для продолжения передачи (aria2c \fB\-c\fR URI)\&.
.SS "Перехват сообщения"
.sp
aria2 предоставляет параметры, в которых указываются произвольные команды, выполняемые после наступления определенного события\&. В настоящее время доступны следующие параметры: \fB\-\-on\-bt\-download\-complete\fR, \fB\-\-on\-download\-pause\fR, \fB\-\-on\-download\-complete\fR\&. \fB\-\-on\-download\-start\fR, \fB\-\-on\-download\-error\fR, \fB\-\-on\-download\-stop\fR\&.
.sp
aria2 передает 3 аргумента указанной команды, которая выполняется\&. Это аргументы: GID, количество файлов и путь к файлу\&. Для HTTP\-, FTP\-загрузок, обычно количество файлов \- 1\&. BitTorrent загрузка может содержать множество файлов\&. Если число файлов больше чем один, то путь к файлу будет для первого\&. Другими словами, это значение параметра path в первой структуре, определенный параметр которой имеет значение true (истина), в ответе RPC\-метода \fBaria2\&.getFiles\fR\&. Если вы хотите получить все пути к файлам, то рассмотрите использование JSON\-RPC/XML\-RPC\&. Обратите внимание, что путь к файлу может меняться в процессе загрузки по HTTP из\-за перенаправления или заголовка Content\-Disposition\&.
.sp
Посмотрите пример, как аргументы передаются команде\&.
.sp
.if n \{\
.RS 4
.\}
.nf
$ cat hook\&.sh
#!/bin/sh
echo "Called with [$1] [$2] [$3]"
$ aria2c \-\-on\-download\-complete hook\&.sh http://example\&.org/file\&.iso
Called with [1] [1] [/path/to/file\&.iso]
.fi
.if n \{\
.RE
.\}
.SH "КОДЫ ЗАВЕРШЕНИЯ"
.sp
Поскольку aria2 может обрабатывать несколько загрузок одновременно, она сталкивается с множеством ошибок в сессии\&. aria2 возвращает следующий код завершения, основанный на последней встретившейся ошибке\&.
.PP
\fB0\fR
.RS 4
Если все загрузки завершились успешно\&.
.RE
.PP
\fB1\fR
.RS 4
Если произошла неизвестная ошибка\&.
.RE
.PP
\fB2\fR
.RS 4
Если время истекло\&.
.RE
.PP
\fB3\fR
.RS 4
Если ресурс не был найден\&.
.RE
.PP
\fB4\fR
.RS 4
Если aria2 получила определенное число ошибок "ресурс не найден"\&. Смотрите параметр
\fB\-\-max\-file\-not\-found\fR\&.
.RE
.PP
\fB5\fR
.RS 4
Если загрузка прервана, поскольку скорость загрузки была слишком медленной\&. Смотрите параметр
\fB\-\-lowest\-speed\-limit\fR\&.
.RE
.PP
\fB6\fR
.RS 4
Если произошла проблема с сетью\&.
.RE
.PP
\fB7\fR
.RS 4
Если были не завершенные загрузки\&. Эта ошибка только появляется, только если все завершенные загрузки были успешны и были не завершенные загрузки в очереди, когда aria2 завершилась по нажатию Ctrl\-C пользователем или при отправке сигнала TERM или INT\&.
.RE
.PP
\fB8\fR
.RS 4
Если удаленный сервер не поддерживает возобновление, когда оно было указано как обязательное для завершения загрузки\&.
.RE
.PP
\fB9\fR
.RS 4
Если было не достаточно доступного места на диске\&.
.RE
.PP
\fB10\fR
.RS 4
Если размер блока был отличным от указанного контрольном файле \&.aria2\&. Смотрите параметр
\fB\-\-allow\-piece\-length\-change\fR\&.
.RE
.PP
\fB11\fR
.RS 4
Если aria2 был загружен один и тот же файл в тот момент\&.
.RE
.PP
\fB12\fR
.RS 4
Если aria2 загрузила торрент с одним и тем же хэшем в этот момент\&.
.RE
.PP
\fB13\fR
.RS 4
Если файл уже существует\&. Смотрите параметр
\fB\-\-allow\-overwrite\fR\&.
.RE
.PP
\fB14\fR
.RS 4
Если не удалось переименование\&. Смотрите параметр
\fB\-\-auto\-file\-renaming\fR\&.
.RE
.PP
\fB15\fR
.RS 4
Если aria2 не смогла открыть существующий файл\&.
.RE
.PP
\fB16\fR
.RS 4
Если aria2 не смогла создать новый файл или обрезать существующий файл\&.
.RE
.PP
\fB17\fR
.RS 4
Если произошла ошибка чтения/записи файла\&.
.RE
.PP
\fB18\fR
.RS 4
Если aria2 не смогла создать каталог\&.
.RE
.PP
\fB19\fR
.RS 4
Если не удалось разрешение имен (DNS)\&.
.RE
.PP
\fB20\fR
.RS 4
Если aria2 не смогла проанализировать Metalink\-документ\&.
.RE
.PP
\fB21\fR
.RS 4
Если FTP\-команда не удалась\&.
.RE
.PP
\fB22\fR
.RS 4
Если HTTP\-заголовок ответа был испорчен или неожиданным\&.
.RE
.PP
\fB23\fR
.RS 4
Если произошло слишком много перенаправлений\&.
.RE
.PP
\fB24\fR
.RS 4
Если HTTP\-авторизация не удалась\&.
.RE
.PP
\fB25\fR
.RS 4
Если aria2 не смогла проанализировать закодированный файл (обычно \&.torrent\-файл)\&.
.RE
.PP
\fB26\fR
.RS 4
Если файл \&.torrent был испорчен или потеряна информация, которая необходима aria2\&.
.RE
.PP
\fB27\fR
.RS 4
Если Magnet\-ссылка была плохой\&.
.RE
.PP
\fB28\fR
.RS 4
Если был задан плохой/неопознанный параметр или неожиданный аргумент к нему\&.
.RE
.PP
\fB29\fR
.RS 4
Если удаленный сервер не смог обработать запрос из\-за временной перегрузки или регламентных работ\&.
.RE
.PP
\fB30\fR
.RS 4
Если aria2 не смогла проанализировать JSON\-RPC\-запрос\&.
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
Ошибка, произошедшая в завершенной загрузке, не будет передана как код завершения\&.
.sp .5v
.RE
.SH "ОКРУЖЕНИЕ"
.sp
aria2 распознает следующие переменные окружения\&.
.PP
http_proxy [http://][ПОЛЬЗОВАТЕЛЬ:ПАРОЛЬ@]ХОСТ[:ПОРТ]
.RS 4
Указать прокси\-сервер для использования в HTTP\&. Заменяет значение http\-proxy в конфигурационном файле\&. Параметр
\fB\-\-http\-proxy\fR
в командной строке заменяет эту переменную\&.
.RE
.PP
https_proxy [http://][ПОЛЬЗОВАТЕЛЬ:ПАРОЛЬ@]ХОСТ[:ПОРТ]
.RS 4
Указать прокси\-сервер для использования в HTTPS\&. Заменяет значение https\-proxy в конфигурационном файле\&. Параметр
\fB\-\-https\-proxy\fR
в командной строке заменяет эту переменную\&.
.RE
.PP
ftp_proxy [http://][ПОЛЬЗОВАТЕЛЬ:ПАРОЛЬ@]ХОСТ[:ПОРТ]
.RS 4
Указать прокси\-сервер для использования в FTP\&. Заменяет значение ftp\-proxy в конфигурационном файле\&. Параметр
\fB\-\-ftp\-proxy\fR
в командной строке заменяет эту переменную\&.
.RE
.PP
all_proxy [http://][ПОЛЬЗОВАТЕЛЬ:ПАРОЛЬ@]ХОСТ[:ПОРТ]
.RS 4
Указать прокси\-сервер для использования, если не указан конкретный протокол для прокси\&. Заменяет значение all\-proxy в конфигурационном файле\&. Параметр
\fB\-\-all\-proxy\fR
в командной строке заменяет эту переменную\&.
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
Не смотря на то, что aria2 допускает ftp:// и https:// схемы прокси в URI, она просто предполагает, что определен http:// и не меняет своего поведения, основанного на определенной схеме\&.
.sp .5v
.RE
.PP
no_proxy [ДОМЕН,\&...]
.RS 4
Указать, разделенные запятыми, имена хостов, доменов и сетевых адресов с CIDR\-блоком, или без него, для которых прокси использоваться не будет\&. Заменяет значение no\-proxy в конфигурационном файле\&. Параметр
\fB\-\-no\-proxy\fR
в командной строке заменяет эту переменную\&.
.RE
.SH "ФАЙЛЫ"
.SS "aria2\&.conf"
.sp
По умолчанию, aria2 анализирует \fI$HOME/\&.aria2/aria2\&.conf\fR как конфигурационный файл\&. Вы можете указать путь к конфигурационному файлу в параметре \fB\-\-conf\-path\fR\&. Если вы не хотите использовать конфигурационный файл, используйте параметр \fB\-\-no\-conf\fR\&.
.sp
Конфигурационный файл \- это текстовый файл, содержащий один параметр в строке\&. В каждой строке, вы можете указать пары имя\-значение в формате: ИМЯ=ЗНАЧЕНИЕ, где имя \- это длинный параметр командной строки, без префикса "\-\-"\&. Вы можете использовать тот же синтаксис, что и для параметра командной строки\&. Строки начинающиеся с "#" рассматриваются как комментарии\&.
.sp
.if n \{\
.RS 4
.\}
.nf
# sample configuration file for aria2c
listen\-port=60000
dht\-listen\-port=60000
seed\-ratio=1\&.0
max\-upload\-limit=50K
ftp\-pasv=true
.fi
.if n \{\
.RE
.\}
.SS "dht\&.dat"
.sp
By default, the routing table of IPv4 DHT is saved to the path \fI$HOME/\&.aria2/dht\&.dat\fR and the routing table of IPv6 DHT is saved to the path \fI$HOME/\&.aria2/dht6\&.dat\fR\&.
.SS "Netrc"
.sp
Поддержка Netrc включена по умолчанию для HTTP(S)/FTP\&. Для отключения поддержки netrc, укажите параметр \fB\-n\fR\&. Ваш файл \&.netrc должен иметь соответствующие права (600)\&.
.sp
Если имя машины (machine) начинается с "\&.", то aria2 выполняет доменное сопоставление вместо точного соответствия\&. Это расширение aria2\&. Пример доменного сопоставления, представьте себе следующие содержимое \&.netrc:
.sp
.if n \{\
.RS 4
.\}
.nf
machine \&.example\&.org login myid password mypasswd
.fi
.if n \{\
.RE
.\}
.sp
Домен "aria2\&.example\&.org" сопоставляется с "\&.example\&.org" и используется \fImyid\fR и \fImypasswd\fR\&.
.sp
Примеры некоторых доменных сопоставлений: домен "example\&.net" не сопоставим с "\&.example\&.org"\&. Домен "example\&.org" не сопоставим "\&.example\&.org" из\-за предшествующей "\&."\&. Если вы хотите соответствия "example\&.org", то точно укажите \- "example\&.org"\&.
.SS "Контрольный файл"
.sp
aria2 использует контрольный файл для отслеживания прогресса загрузки\&. Контрольный файл размещается в том же каталоге, что и загружаемый файл, и имеет имя, как у загружаемого файла с добавлением "\&.aria2"\&. Например, если file\&.zip загружаемый файл, тогда контрольный файл будет file\&.zip\&.aria2\&. (Существует исключение для этого именования\&. При загрузке торрента с множеством файлов, контрольный файл будет в "корневом каталоге" с именем торрента и добавлением "\&.aria2"\&. Имя "корневого каталога" \- значение ключа "name" в "info" внутри torrent\-файла\&.)
.sp
Обычно контрольный файл удаляется после завершения загрузки\&. Если aria2 решает, что загрузка не может быть возобновлена (например, когда загружается файл с HTTP\-сервера, который не поддерживает возобновление), контрольный файл не создается\&.
.sp
Обычно, если вы потеряете контрольный файл, вы не сможете возобновить загрузку\&. Но если у вас есть torrent или metalink файлы с контрольными суммами блоков данных, вы сможете возобновить загрузку без контрольного файла, указав параметр \-V в командной строке aria2c\&.
.SS "Входной файл"
.sp
Входной файл может содержать список URI для загрузки aria2\&. Вы можете указать несколько URI для одного объекта, разделяя URI, в одной строке, табуляцией\&.
.sp
Каждая строка рассматривается, как аргумент командой строки\&. Следовательно, на них влияют параметры \fB\-Z\fR и \fB\-P\fR\&.
.sp
Так как aria2 непосредственно читает URI из входного файла, то они не должны быть указаны с одинарными(\*(Aq) или двойными(") кавычками\&.
.sp
Строка, которая начинается с "#" обрабатывается как комментарий и пропускается\&.
.sp
Кроме того, следующие параметры могут быть определены после каждой строки с URI\&. Эти дополнительные строки должны начинаться с пробела(ов)\&.
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBall\-proxy\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBall\-proxy\-passwd\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBall\-proxy\-user\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBallow\-overwrite\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBallow\-piece\-length\-change\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBalways\-resume\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBasync\-dns\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBauto\-file\-renaming\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBbt\-enable\-lpd\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBbt\-exclude\-tracker\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBbt\-external\-ip\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBbt\-hash\-check\-seed\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBbt\-max\-open\-files\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBbt\-max\-peers\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBbt\-metadata\-only\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBbt\-min\-crypto\-level\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBbt\-prioritize\-piece\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBbt\-request\-peer\-speed\-limit\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBbt\-require\-crypto\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBbt\-save\-metadata\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBbt\-seed\-unverified\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBbt\-stop\-timeout\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBbt\-tracker\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBbt\-tracker\-connect\-timeout\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBbt\-tracker\-interval\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBbt\-tracker\-timeout\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBbt\-remove\-unselected\-file\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBcheck\-integrity\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBconditional\-get\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBconnect\-timeout\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBcontinue\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBdir\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBdry\-run\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBenable\-async\-dns6\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBenable\-http\-keep\-alive\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBenable\-http\-pipelining\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBenable\-peer\-exchange\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBfile\-allocation\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBfollow\-metalink\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBfollow\-torrent\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBftp\-passwd\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBftp\-pasv\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBftp\-proxy\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBftp\-proxy\-passwd\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBftp\-proxy\-user\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBftp\-reuse\-connection\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBftp\-type\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBftp\-user\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBheader\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBhttp\-accept\-gzip\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBhttp\-auth\-challenge\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBhttp\-no\-cache\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBhttp\-passwd\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBhttp\-proxy\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBhttp\-proxy\-passwd\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBhttp\-proxy\-user\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBhttp\-user\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBhttps\-proxy\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBhttps\-proxy\-passwd\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBhttps\-proxy\-user\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBindex\-out\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBlowest\-speed\-limit\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBmax\-connection\-per\-server\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBmax\-download\-limit\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBmax\-file\-not\-found\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBmax\-resume\-failure\-tries\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBmax\-tries\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBmax\-upload\-limit\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBmetalink\-enable\-unique\-protocol\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBmetalink\-language\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBmetalink\-location\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBmetalink\-os\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBmetalink\-preferred\-protocol\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBmetalink\-version\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBmin\-split\-size\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBno\-file\-allocation\-limit\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBno\-netrc\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBno\-proxy\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBout\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBparameterized\-uri\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBproxy\-method\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBrealtime\-chunk\-checksum\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBreferer\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBremote\-time\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBremove\-control\-file\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBreuse\-uri\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBseed\-ratio\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBseed\-time\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBselect\-file\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBsplit\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBtimeout\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBuse\-head\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBuser\-agent\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBretry\-wait\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBmetalink\-base\-uri\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBpause\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBstream\-piece\-selector\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBhash\-check\-only\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBchecksum\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBpiece_length\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBuri\-selector\fR
.RE
.sp
Эти параметры имеют точно такой же смысл, что параметры командной строки, но это применимо только к URI, к которым они принадлежат\&. Обратите внимание, что параметры во входном файле не должны иметь префикс "\-\-"\&.
.sp
Например, такое содержимое uri\&.txt
.sp
.if n \{\
.RS 4
.\}
.nf
http://server/file\&.iso http://mirror/file\&.iso
  dir=/iso_images
  out=file\&.img
http://foo/bar
.fi
.if n \{\
.RE
.\}
.sp
Если aria2 выполняется с параметрами \fB\-i\fR uri\&.txt \fB\-d\fR /tmp, а загрузка происходит с http://server/file\&.iso и http://mirror/file\&.iso, то \fIfile\&.iso\fR сохранится как \fI/iso_images/file\&.img\fR\&. Файл \fIbar\fR загрузится с http://foo/bar и сохранится как \fI/tmp/bar\fR\&.
.sp
В некоторых случаях, параметр \fBout\fR не имеет никакого эффекта\&. Смотрите примечание по ограничениям параметра \fB\-\-out\fR\&.
.SS "Профиль функционирования сервера"
.sp
Этот раздел описывает формат профиля функционирования сервера\&. Это открытый текстовый файл, каждая строка которого имеет несколько пар ИМЯ=ЗНАЧЕНИЕ, разделенных запятыми\&. В настоящее время распознаются следующие ИМЕНА:
.PP
host
.RS 4
Хост\-имя сервера\&. Обязательно\&.
.RE
.PP
protocol
.RS 4
Протокол для этого профиля, такие как ftp, http\&. Обязательно\&.
.RE
.PP
dl_speed
.RS 4
Средняя скорость загрузки, которая наблюдалась при предыдущей загрузке, в байт/секунду\&. Обязательно\&.
.RE
.PP
sc_avg_speed
.RS 4
Средняя скорость загрузки, которая наблюдалась при предыдущей загрузке, в байт/секунду\&. Это значение обновляется, только если загрузка произведена при одном соединении и только с использованием AdaptiveURISelector\&. Необязательно\&.
.RE
.PP
mc_avg_speed
.RS 4
Средняя скорость загрузки, которая наблюдалась при предыдущей загрузке, в байт/секунду\&. Это значение обновляется, только если загрузка произведена при нескольких соединениях и только с использованием AdaptiveURISelector\&. Необязательно\&.
.RE
.PP
counter
.RS 4
Сколько раз использовался сервер\&. В настоящее время это значение используется только при AdaptiveURISelector\&. Необязательно\&.
.RE
.PP
last_updated
.RS 4
Время связи, в GMT, с этим сервером, указывается в секундах, начиная с 00:00:00 1 Января, 1970, UTC\&. Обязательно\&.
.RE
.PP
status
.RS 4
ERROR, когда сервер не доступен из\-за неисправности или тайм\-аута\&. Иначе \- OK\&.
.RE
.sp
Эти поля должны быть в одной строке\&. Последовательность полей не имеет значения\&. Вы можете размещать пары, отличные от перечисленных выше; они будут просто игнорироваться\&.
.sp
Например, следующим образом:
.sp
.if n \{\
.RS 4
.\}
.nf
host=localhost, protocol=http, dl_speed=32000, last_updated=1222491640, status=OK
host=localhost, protocol=ftp, dl_speed=0, last_updated=1222491632, status=ERROR
.fi
.if n \{\
.RE
.\}
.SH "RPC-ИНТЕРФЕЙС"
.sp
aria2 обеспечивает JSON\-RPC через HTTP и XML\-RPC через HTTP, они в основном имеют одинаковые функции\&. aria2 также обеспечивает JSON\-RPC через WebSocket\&. JSON\-RPC через WebSocket использует тот же самый метод сигнатур и формат ответа как у JSON\-RPC через HTTP, но дополнительно имеет сервер, инициирующий уведомления\&. Смотрите подробности в разделе \fBJSON\-RPC через WebSocket\fR\&.
.sp
Путь запроса к JSON\-RPC\-интерфейсу (для через HTTP и через WebSocket) \- \fI/jsonrpc\fR\&. Путь запроса к XML\-RPC\-интерфейсу \- \fI/rpc\fR\&.
.sp
WebSocket URI для JSON\-RPC через WebSocket является ws://HOST:PORT/jsonrpc\&.
.sp
Реализованный JSON\-RPC основан на спецификации JSON\-RPC 2\&.0 и поддерживает HTTP POST и GET (JSONP)\&. Использование WebSocket как транспорта является начальным расширением aria2\&.
.sp
JSON\-RPC\-интерфейс не поддерживает уведомления в HTTP, но RPC\-сервер будет отправлять уведомления в WebSocket\&. Он также не поддерживает числа с плавающей точкой\&. Символы должны быть в кодировке UTF\-8\&.
.sp
В следующем документе о JSON\-RPC, описана структура JSON\-объекта\&.
.SS "Терминология"
.PP
GID
.RS 4
GID (или gid) \- это ключ, для управления каждой загрузкой\&. Каждая загрузка имеет уникальный GID\&. В настоящее время GID представлен как целое число, но обрабатывается как не целое число, т\&.к\&. он может быть изменен на другой тип в будущих версиях\&. Обратите внимание, что GID существует в локальной сессии и не сохраняется при завершении работы aria2\&.
.RE
.SS "Методы"
.sp
Весь код в примерах написан на Python2\&.7\&.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.addUri (uris[, options[, position]])\fR
.RS 4
.sp
Этот метод добавляет новый HTTP(S)/FTP/BitTorrent Magnet URI\&. Параметр \fIuris\fR имеет тип массив, элемент которого имеет тип строка и содержит URI\&. Для BitTorrent Magnet URI, \fIuris\fR должен содержать только один элемент, и он должен быть BitTorrent Magnet URI\&. URI в параметре \fIuris\fR должны указывать на один и тот же файл\&. Если вы смешивайте другие URI, указывающие на другой файл, то aria2 не сообщит об этом, но и загрузка может неудачно завершаться\&. Параметр \fIoptions\fR имеет тип структура, элементы которой являются парой имя и значение\&. Смотрите ниже \fBПараметры\fR для более подробной информации\&. Если параметр \fIposition\fR задан как целое число, начиная с 0, то новая загрузка будет вставлена на позицию \fIposition\fR в очередь ожидания\&. Если параметр \fIposition\fR не задан или больше чем размер очереди, то загрузка будет добавлена в конец очереди\&. Этот метод возвращает GID зарегистрированной загрузки\&.
.sp
Следующий пример добавляет http://example\&.org/file в aria2:
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import urllib2, json
>>> jsonreq = json\&.dumps({\*(Aqjsonrpc\*(Aq:\*(Aq2\&.0\*(Aq, \*(Aqid\*(Aq:\*(Aqqwer\*(Aq,
\&.\&.\&.                       \*(Aqmethod\*(Aq:\*(Aqaria2\&.addUri\*(Aq,
\&.\&.\&.                       \*(Aqparams\*(Aq:[[\*(Aqhttp://example\&.org/file\*(Aq]]})
>>> c = urllib2\&.urlopen(\*(Aqhttp://localhost:6800/jsonrpc\*(Aq, jsonreq)
>>> c\&.read()
\*(Aq{"id":"qwer","jsonrpc":"2\&.0","result":"1"}\*(Aq
.fi
.if n \{\
.RE
.\}
.sp
Следующий пример добавляет http://example\&.org/file в aria2:
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import xmlrpclib
>>> s = xmlrpclib\&.ServerProxy(\*(Aqhttp://localhost:6800/rpc\*(Aq)
>>> s\&.aria2\&.addUri([\*(Aqhttp://example\&.org/file\*(Aq])
\*(Aq1\*(Aq
.fi
.if n \{\
.RE
.\}
.sp
Следующий пример добавляет два источника и некоторые параметры:
.sp
.if n \{\
.RS 4
.\}
.nf
>>> s\&.aria2\&.addUri([\*(Aqhttp://example\&.org/file\*(Aq, \*(Aqhttp://mirror/file\*(Aq],
                    dict(dir="/tmp"))
\*(Aq2\*(Aq
.fi
.if n \{\
.RE
.\}
.sp
Следующий пример добавляет загрузку и вставляет ее перед ожидающими загрузками:
.sp
.if n \{\
.RS 4
.\}
.nf
>>> s\&.aria2\&.addUri([\*(Aqhttp://example\&.org/file\*(Aq], {}, 0)
\*(Aq3\*(Aq
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.addTorrent (torrent[, uris[, options[, position]]])\fR
.RS 4
.sp
Этот метод добавляет BitTorrent\-загрузку путем загрузки \&.torrent\-файла\&. Если вы хотите добавить BitTorrent Magnet URI, взамен используйте метод \fBaria2\&.addUri\fR\&. Параметр \fItorrent\fR имеет тип base64, с содержанием Base64\-кодировки \&.в \&.torrent\-файле\&. Параметр \fIuris\fR имеет тип массив, элемент которого имеет тип строка и содержит URI\&. Параметр \fIuris\fR используется для Web\-сидирования\&. Для однофайловых торрентов, URI может быть завершенным, который указывает на ресурс, или же если заканчиваться символом /, тогда будет добавлено имя из torrent\-файла\&. Для многофайловых торентов, имя и путь в торренте будут добавлены из URI для каждого файла\&. Параметр \fIoptions\fR имеет тип структура, элементы которой являются парой имя и значение\&. Смотрите ниже \fBПараметры\fR для более подробной информации\&. Если параметр \fIposition\fR задан как целое число, начиная с 0, то новая загрузка будет вставлена на позицию \fIposition\fR в очередь ожидания\&. Если параметр \fIposition\fR не задан или больше чем размер очереди, то загрузка будет добавлена в конец очереди\&. Этот метод возвращает GID зарегистрированной загрузки\&. Загруженные данные сохраняются в файл с именем шестнадцатеричной строки SHA\-1\-хэша этих данных плюс "\&.torrent", в каталог указанный в параметре \fB\-\-dir\fR\&. Например, имя файла 0a3893293e27ac0490424c06de4d09242215f0a6\&.torrent\&. Если этот файл существует, то он будет перезаписан\&. Если файл не может быть успешно сохранен, то загрузки, добавленные этим методом, не сохраняются при помощи параметра \fB\-\-save\-session\fR\&.
.sp
Следующий пример добавляет локальный файл file\&.torrent в aria2:
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import urllib2, json, base64
>>> torrent = base64\&.b64encode(open(\*(Aqfile\&.torrent\*(Aq)\&.read())
>>> jsonreq = json\&.dumps({\*(Aqjsonrpc\*(Aq:\*(Aq2\&.0\*(Aq, \*(Aqid\*(Aq:\*(Aqasdf\*(Aq,
\&.\&.\&.                       \*(Aqmethod\*(Aq:\*(Aqaria2\&.addTorrent\*(Aq, \*(Aqparams\*(Aq:[torrent]})
>>> c = urllib2\&.urlopen(\*(Aqhttp://localhost:6800/jsonrpc\*(Aq, jsonreq)
>>> c\&.read()
\*(Aq{"id":"asdf","jsonrpc":"2\&.0","result":"6"}\*(Aq
.fi
.if n \{\
.RE
.\}
.sp
Следующий пример добавляет локальный файл file\&.torrent в aria2:
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import xmlrpclib
>>> s = xmlrpclib\&.ServerProxy(\*(Aqhttp://localhost:6800/rpc\*(Aq)
>>> s\&.aria2\&.addTorrent(xmlrpclib\&.Binary(open(\*(Aqfile\&.torrent\*(Aq)\&.read()))
\*(Aq6\*(Aq
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.addMetalink (metalink[, options[, position]])\fR
.RS 4
.sp
Этот метод добавляет Metalink\-загрузку путем загрузки \&.metalink\-файла\&. Параметр \fImetalink\fR имеет тип base64, с содержанием Base64\-кодировки в \&.metalink\-файле\&. Параметр \fIoptions\fR имеет тип структура, элементы которой являются парой имя\-значение\&. Смотрите ниже \fBПараметры\fR для более подробной информации\&. Если параметр \fIposition\fR задан как целое число, начиная с 0, то новая загрузка будет вставлена на позицию \fIposition\fR в очередь ожидания\&. Если параметр \fIposition\fR не задан или больше чем размер очереди, то загрузка будет добавлена в конец очереди\&. Этот метод возвращает GID зарегистрированной загрузки\&. Загруженные данные сохраняются в файл с именем шестнадцатеричной строки SHA\-1\-хэша этих данных плюс "\&.metalink", в каталог указанный в параметре \fB\-\-dir\fR\&. Например, имя файла 0a3893293e27ac0490424c06de4d09242215f0a6\&.metalink\&. Если этот файл существует, то он будет перезаписан\&. Если файл не может быть успешно сохранен, то загрузки, добавленные этим методом, не сохраняются при помощи параметра \fB\-\-save\-session\fR\&.
.sp
Следующий пример добавляет локальный файл file\&.meta4 в aria2:
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import urllib2, json, base64
>>> metalink = base64\&.b64encode(open(\*(Aqfile\&.meta4\*(Aq)\&.read())
>>> jsonreq = json\&.dumps({\*(Aqjsonrpc\*(Aq:\*(Aq2\&.0\*(Aq, \*(Aqid\*(Aq:\*(Aqqwer\*(Aq,
\&.\&.\&.                       \*(Aqmethod\*(Aq:\*(Aqaria2\&.addMetalink\*(Aq, \*(Aqparams\*(Aq:[metalink]})
>>> c = urllib2\&.urlopen(\*(Aqhttp://localhost:6800/jsonrpc\*(Aq, jsonreq)
>>> c\&.read()
\*(Aq{"id":"qwer","jsonrpc":"2\&.0","result":["8"]}\*(Aq
.fi
.if n \{\
.RE
.\}
.sp
Следующий пример добавляет локальный файл file\&.meta4 в aria2:
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import xmlrpclib
>>> s = xmlrpclib\&.ServerProxy(\*(Aqhttp://localhost:6800/rpc\*(Aq)
>>> s\&.aria2\&.addMetalink(xmlrpclib\&.Binary(open(\*(Aqfile\&.meta4\*(Aq)\&.read()))
[\*(Aq8\*(Aq]
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.remove (gid)\fR
.RS 4
.sp
Этот метод удаляет загрузку, которая обозначена \fIgid\fR\&. Параметр \fIgid\fR имеет тип строка\&. Если указана загрузка, которая загружается в данный момент, то сначала она остановится\&. Статус удаления станет "removed" (удаленно)\&. Этот метод возвращает GID удаленной загрузки\&.
.sp
Следующий пример удаляет загрузку, GID которой "3":
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import urllib2, json
>>> jsonreq = json\&.dumps({\*(Aqjsonrpc\*(Aq:\*(Aq2\&.0\*(Aq, \*(Aqid\*(Aq:\*(Aqqwer\*(Aq,
\&.\&.\&.                       \*(Aqmethod\*(Aq:\*(Aqaria2\&.remove\*(Aq, \*(Aqparams\*(Aq:[\*(Aq3\*(Aq]})
>>> c = urllib2\&.urlopen(\*(Aqhttp://localhost:6800/jsonrpc\*(Aq, jsonreq)
>>> c\&.read()
\*(Aq{"id":"qwer","jsonrpc":"2\&.0","result":"3"}\*(Aq
.fi
.if n \{\
.RE
.\}
.sp
Следующий пример удаляет загрузку, GID которой "3":
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import xmlrpclib
>>> s = xmlrpclib\&.ServerProxy(\*(Aqhttp://localhost:6800/rpc\*(Aq)
>>> s\&.aria2\&.remove(\*(Aq3\*(Aq)
\*(Aq3\*(Aq
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.forceRemove (gid)\fR
.RS 4
.sp
Этот метод удаляет загрузку, которая обозначена \fIgid\fR\&. Метод действует подобно \fBaria2\&.remove\fR, за исключением того, что метод удаляет загрузку без каких\-либо действий, которые требует времени, например связь с BitTorrent\-трекером\&.
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.pause (gid)\fR
.RS 4
.sp
Этот метод приостанавливает загрузку, которая обозначена \fIgid\fR\&. Параметр \fIgid\fR имеет тип строки\&. Статус приостановки станет "paused" (приостановлено)\&. Если загрузка активна, то загрузка переместится на первую позицию в очередь ожидания\&. Пока статус "paused", загрузка не начнется\&. Для смены статуса на "waiting", используйте метод \fBaria2\&.unpause\fR\&. Этот метод возвращает GID приостановленной загрузки\&.
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.pauseAll ()\fR
.RS 4
.sp
Этот метод эквивалентен по вызову \fBaria2\&.pause\fR, для каждой активной/ожидающей закачки\&. Этот метод возвращает "OK", в случае успеха\&.
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.forcePause (pid)\fR
.RS 4
.sp
Этот метод приостанавливает загрузку, которая обозначена \fIgid\fR\&. Метод действует подобно \fBaria2\&.pause\fR, за исключением того, что метод приостанавливает загрузку без каких\-либо действий, которые требует времени, например связь с BitTorrent\-трекером\&.
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.forcePauseAll ()\fR
.RS 4
.sp
Этот метод эквивалентен по вызову \fBaria2\&.forcePause\fR, для каждой активной/ожидающей закачки\&. Этот метод возвращает "OK", в случае успеха\&.
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.unpause (gid)\fR
.RS 4
.sp
Этот метод изменяет статус загрузки, которая обозначена \fIgid\fR, с "paused" на "waiting"\&. Это позволяет перезапускать загрузку\&. Значение ключа \fIgid\fR имеет тип строки\&. Этот метод возвращает GID, снятой с паузы, загрузки\&.
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.unpauseAll ()\fR
.RS 4
.sp
Этот метод эквивалентен по вызову \fBaria2\&.unpause\fR, для каждой активной/ожидающей закачки\&. Этот метод возвращает "OK", в случае успеха\&.
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.tellStatus (gid[, keys])\fR
.RS 4
.sp
Этот метод возвращает состояние загрузки, которая обозначена \fIgid\fR\&. Параметр \fIgid\fR имеет тип строка\&. Параметр \fIkeys\fR имеет тип массив строк\&. Если \fIkeys\fR указан, то ответ содержит определенные значения в массиве \fIkeys\fR\&. Если \fIkeys\fR пустой или не указан, то ответ содержит все значения\&. Это полезно, если вы хотите использовать определенные параметры, чтобы исключить множество пересылок\&. Например, \fBaria2\&.tellStatus\fR("1", ["gid", "status"]) возвратит \fIgid\fR и \fIstatus\fR\&. Ответ имеет тип структура и содержит следующие поля\&. Поле имеет тип строка\&.
.PP
gid
.RS 4
GID этой загрузки\&.
.RE
.PP
status
.RS 4
"active" \- загружаемая/сидируемая в данный момент\&. "waiting" \- ожидающая в очереди; загрузка не началась\&. "paused" \- приостановленная\&. "error" \- остановленная, т\&.к\&. произошла ошибка\&. "complete" \- остановленная и завершенная загрузка\&. "removed" \- удаленная пользователем загрузка\&.
.RE
.PP
totalLength
.RS 4
Общий объем загрузки в байтах\&.
.RE
.PP
completedLength
.RS 4
Загруженный объем загрузки в байтах\&.
.RE
.PP
uploadLength
.RS 4
Выгруженный объем загрузки в байтах\&.
.RE
.PP
bitfield
.RS 4
Шестнадцатеричное представление процесса загрузки\&. Старший бит соответствует блоку с индексом 0\&. Бит устанавливается, если блок доступен и не устанавливается, если блок отсутствует\&. Запасные биты в конце устанавливаются в 0\&. Если загрузка еще не начался, этот значение не будет включено в ответ\&.
.RE
.PP
downloadSpeed
.RS 4
Скорость загрузки в байт/сек\&.
.RE
.PP
uploadSpeed
.RS 4
Скорость выгрузки в байт/сек\&.
.RE
.PP
infoHash
.RS 4
Информация о хэше (InfoHash)\&. Только для BitTorrent\&.
.RE
.PP
numSeeders
.RS 4
Количество сидов, к которым подключен клиент\&. Только для BitTorrent\&.
.RE
.PP
pieceLength
.RS 4
Размер блока в байтах\&.
.RE
.PP
numPieces
.RS 4
Количество блоков\&.
.RE
.PP
connections
.RS 4
Количество пиров/серверов, к которым подключен клиент\&.
.RE
.PP
errorCode
.RS 4
Последний код ошибки, которая произошла при загрузке\&. Значение имеет тип строки\&. Коды ошибок определены в разделе
\fBКОДЫ ЗАВЕРШЕНИЯ\fR\&. Это значение доступно только для остановленных/завершенных загрузок\&.
.RE
.PP
followedBy
.RS 4
Список с GID, которые сгенерированы в результате запуска этой загрузки\&. Например, когда aria2 загружает Metalink\-файл, то это генерирует загрузки, описанные в нем (см\&. параметр
\fB\-\-follow\-metalink\fR)\&. Это значение полезно для отслеживания автоматически сгенерированных загрузок\&. Если таких загрузок нет, то значение не будет включено в ответ\&.
.RE
.PP
belongsTo
.RS 4
GID родительской загрузки\&. Некоторые загрузки являются частью другой загрузки\&. Например, если файл в Metalink содержит BitTorrent\-ответ, загрузка \&.torrent будет частью этого файла\&. Если эта загрузка не имеет родительской загрузки, то значение не будет включено в ответ\&.
.RE
.PP
dir
.RS 4
Каталог для сохранения файлов\&. Этот параметр не доступен для остановленных загрузок\&.
.RE
.PP
files
.RS 4
Возвращает список файлов\&. Элемент списка \- это структура, такая же, что и в методе
\fBaria2\&.getFiles\fR\&.
.RE
.PP
bittorrent
.RS 4
Структура, в которой содержится информация, извлеченная из \&.torrent\-файла\&. Только для BitTorrent\&. Содержит следующие поля\&.
.PP
announceList
.RS 4
Список списков URI анонса\&. Если \&.torrent\-файл содержит анонс, а не список\-анонс, то анонс конвертируется в формат списка\-анонса\&.
.RE
.PP
comment
.RS 4
Комментарий по торренту\&. Используется comment\&.utf\-8, если доступно\&.
.RE
.PP
creationDate
.RS 4
Время создания торрента\&. Значение является целым числом, с начала века, измеряется в секундах\&.
.RE
.PP
mode
.RS 4
Файловый режим торрента\&. Значение одно из двух:
\fIsingle\fR
(одиночный) или
\fImulti\fR
(множественный)\&.
.RE
.PP
info
.RS 4
Структура, которая содержит данные из раздела Info\&. Она содержит следующие поля\&.
.PP
name
.RS 4
имя в разделе info\&. Используется name\&.utf\-8, если доступно\&.
.RE
.RE
.RE
.sp
Следующий пример получает информацию о загрузке, GID которой "1":
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import urllib2, json
>>> from pprint import pprint
>>> jsonreq = json\&.dumps({\*(Aqjsonrpc\*(Aq:\*(Aq2\&.0\*(Aq, \*(Aqid\*(Aq:\*(Aqqwer\*(Aq,
\&.\&.\&.                       \*(Aqmethod\*(Aq:\*(Aqaria2\&.tellStatus\*(Aq, \*(Aqparams\*(Aq:[\*(Aq1\*(Aq]})
>>> c = urllib2\&.urlopen(\*(Aqhttp://localhost:6800/jsonrpc\*(Aq, jsonreq)
>>> pprint(json\&.loads(c\&.read()))
{u\*(Aqid\*(Aq: u\*(Aqqwer\*(Aq,
 u\*(Aqjsonrpc\*(Aq: u\*(Aq2\&.0\*(Aq,
 u\*(Aqresult\*(Aq: {u\*(Aqbitfield\*(Aq: u\*(Aq0000000000\*(Aq,
             u\*(AqcompletedLength\*(Aq: u\*(Aq901120\*(Aq,
             u\*(Aqconnections\*(Aq: u\*(Aq1\*(Aq,
             u\*(Aqdir\*(Aq: u\*(Aq/downloads\*(Aq,
             u\*(AqdownloadSpeed\*(Aq: u\*(Aq15158\*(Aq,
             u\*(Aqfiles\*(Aq: [{u\*(Aqindex\*(Aq: u\*(Aq1\*(Aq,
                         u\*(Aqlength\*(Aq: u\*(Aq34896138\*(Aq,
                         u\*(AqcompletedLength\*(Aq: u\*(Aq34896138\*(Aq,
                         u\*(Aqpath\*(Aq: u\*(Aq/downloads/file\*(Aq,
                         u\*(Aqselected\*(Aq: u\*(Aqtrue\*(Aq,
                         u\*(Aquris\*(Aq: [{u\*(Aqstatus\*(Aq: u\*(Aqused\*(Aq,
                                    u\*(Aquri\*(Aq: u\*(Aqhttp://example\&.org/file\*(Aq}]}],
             u\*(Aqgid\*(Aq: u\*(Aq1\*(Aq,
             u\*(AqnumPieces\*(Aq: u\*(Aq34\*(Aq,
             u\*(AqpieceLength\*(Aq: u\*(Aq1048576\*(Aq,
             u\*(Aqstatus\*(Aq: u\*(Aqactive\*(Aq,
             u\*(AqtotalLength\*(Aq: u\*(Aq34896138\*(Aq,
             u\*(AquploadLength\*(Aq: u\*(Aq0\*(Aq,
             u\*(AquploadSpeed\*(Aq: u\*(Aq0\*(Aq}}
.fi
.if n \{\
.RE
.\}
.sp
Следующий пример получает информацию об определенных полях, который вас интересуют:
.sp
.if n \{\
.RS 4
.\}
.nf
>>> jsonreq = json\&.dumps({\*(Aqjsonrpc\*(Aq:\*(Aq2\&.0\*(Aq, \*(Aqid\*(Aq:\*(Aqqwer\*(Aq,
\&.\&.\&.                       \*(Aqmethod\*(Aq:\*(Aqaria2\&.tellStatus\*(Aq,
\&.\&.\&.                       \*(Aqparams\*(Aq:[\*(Aq1\*(Aq, [\*(Aqgid\*(Aq,
\&.\&.\&.                                       \*(AqtotalLength\*(Aq,
\&.\&.\&.                                       \*(AqcompletedLength\*(Aq]]})
>>> c = urllib2\&.urlopen(\*(Aqhttp://localhost:6800/jsonrpc\*(Aq, jsonreq)
>>> pprint(json\&.loads(c\&.read()))
{u\*(Aqid\*(Aq: u\*(Aqqwer\*(Aq,
 u\*(Aqjsonrpc\*(Aq: u\*(Aq2\&.0\*(Aq,
 u\*(Aqresult\*(Aq: {u\*(AqcompletedLength\*(Aq: u\*(Aq5701632\*(Aq,
             u\*(Aqgid\*(Aq: u\*(Aq1\*(Aq,
             u\*(AqtotalLength\*(Aq: u\*(Aq34896138\*(Aq}}
.fi
.if n \{\
.RE
.\}
.sp
Следующий пример получает информацию о загрузке, GID которой "1":
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import xmlrpclib
>>> from pprint import pprint
>>> s = xmlrpclib\&.ServerProxy(\*(Aqhttp://localhost:6800/rpc\*(Aq)
>>> r = s\&.aria2\&.tellStatus(\*(Aq1\*(Aq)
>>> pprint(r)
{\*(Aqbitfield\*(Aq: \*(Aqffff80\*(Aq,
 \*(AqcompletedLength\*(Aq: \*(Aq34896138\*(Aq,
 \*(Aqconnections\*(Aq: \*(Aq0\*(Aq,
 \*(Aqdir\*(Aq: \*(Aq/downloads\*(Aq,
 \*(AqdownloadSpeed\*(Aq: \*(Aq0\*(Aq,
 \*(AqerrorCode\*(Aq: \*(Aq0\*(Aq,
 \*(Aqfiles\*(Aq: [{\*(Aqindex\*(Aq: \*(Aq1\*(Aq,
            \*(Aqlength\*(Aq: \*(Aq34896138\*(Aq,
            \*(AqcompletedLength\*(Aq: \*(Aq34896138\*(Aq,
            \*(Aqpath\*(Aq: \*(Aq/downloads/file\*(Aq,
            \*(Aqselected\*(Aq: \*(Aqtrue\*(Aq,
            \*(Aquris\*(Aq: [{\*(Aqstatus\*(Aq: \*(Aqused\*(Aq,
                      \*(Aquri\*(Aq: \*(Aqhttp://example\&.org/file\*(Aq}]}],
 \*(Aqgid\*(Aq: \*(Aq1\*(Aq,
 \*(AqnumPieces\*(Aq: \*(Aq17\*(Aq,
 \*(AqpieceLength\*(Aq: \*(Aq2097152\*(Aq,
 \*(Aqstatus\*(Aq: \*(Aqcomplete\*(Aq,
 \*(AqtotalLength\*(Aq: \*(Aq34896138\*(Aq,
 \*(AquploadLength\*(Aq: \*(Aq0\*(Aq,
 \*(AquploadSpeed\*(Aq: \*(Aq0\*(Aq}
.fi
.if n \{\
.RE
.\}
.sp
Следующий пример получает информацию об определенных полях, который вас интересуют:
.sp
.if n \{\
.RS 4
.\}
.nf
>>> r = s\&.aria2\&.tellStatus(\*(Aq1\*(Aq, [\*(Aqgid\*(Aq, \*(AqtotalLength\*(Aq, \*(AqcompletedLength\*(Aq])
>>> pprint(r)
{\*(AqcompletedLength\*(Aq: \*(Aq34896138\*(Aq, \*(Aqgid\*(Aq: \*(Aq1\*(Aq, \*(AqtotalLength\*(Aq: \*(Aq34896138\*(Aq}
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.getUris (gid)\fR
.RS 4
.sp
Этот метод возвращает URI, используемые в загрузке, которая обозначена \fIgid\fR\&. Параметр \fIgid\fR имеет тип строка\&. Ответ имеет тип массив, а элемент \- тип структура и содержит следующие поля\&. Поле имеет тип строка\&.
.PP
uri
.RS 4
URI
.RE
.PP
status
.RS 4

\fIused\fR, если URI уже использован\&.
\fIwaiting\fR, если URI ожидает в очереди\&.
.RE
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import urllib2, json
>>> from pprint import pprint
>>> jsonreq = json\&.dumps({\*(Aqjsonrpc\*(Aq:\*(Aq2\&.0\*(Aq, \*(Aqid\*(Aq:\*(Aqqwer\*(Aq,
\&.\&.\&.                       \*(Aqmethod\*(Aq:\*(Aqaria2\&.getUris\*(Aq, \*(Aqparams\*(Aq:[\*(Aq1\*(Aq]})
>>> c = urllib2\&.urlopen(\*(Aqhttp://localhost:6800/jsonrpc\*(Aq, jsonreq)
>>> pprint(json\&.loads(c\&.read()))
{u\*(Aqid\*(Aq: u\*(Aqqwer\*(Aq,
 u\*(Aqjsonrpc\*(Aq: u\*(Aq2\&.0\*(Aq,
 u\*(Aqresult\*(Aq: [{u\*(Aqstatus\*(Aq: u\*(Aqused\*(Aq,
              u\*(Aquri\*(Aq: u\*(Aqhttp://example\&.org/file\*(Aq}]}
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import xmlrpclib
>>> from pprint import pprint
>>> s = xmlrpclib\&.ServerProxy(\*(Aqhttp://localhost:6800/rpc\*(Aq)
>>> r = s\&.aria2\&.getUris(\*(Aq1\*(Aq)
>>> pprint(r)
[{\*(Aqstatus\*(Aq: \*(Aqused\*(Aq, \*(Aquri\*(Aq: \*(Aqhttp://example\&.org/file\*(Aq}]
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.getFiles (gid)\fR
.RS 4
.sp
Этот метод возвращает список файлов загрузки, которая обозначена \fIgid\fR\&. Параметр \fIgid\fR имеет тип строка\&. Ответ имеет тип массив, а элемент \- тип структура и содержит следующие поля\&. Поле имеет тип строка\&.
.PP
index
.RS 4
Индекс файла\&. Начинается с 1\&. Последовательность файлов такая же, что и в многофайловом торренте\&.
.RE
.PP
path
.RS 4
Путь к файлу\&.
.RE
.PP
length
.RS 4
Размер файла в байта\&.
.RE
.PP
completedLength
.RS 4
Загруженный объем файла в байтах\&. Обратите внимание, что вполне возможно, что сумма completedLength меньше чем в методе
\fBaria2\&.tellStatus\fR\&. Это потому, что completedLength в
\fBaria2\&.getFiles\fR
считаются только завершенные блоки\&. С другой стороны, completedLength в
\fBaria2\&.tellStatus\fR
учитывает частично завершенные блоки\&.
.RE
.PP
selected
.RS 4
"true" \- если этот файл выбран параметром
\fB\-\-select\-file\fR\&. Если параметр
\fB\-\-select\-file\fR
не указан или это однофайловый торрент или загрузка не торрент, то это значение всегда будет "true"\&. Иначе "false"\&.
.RE
.PP
uris
.RS 4
Возвращает список URI для этого файла\&. Элемент списка такая же структура, что используется в методе
\fBaria2\&.getUris\fR\&.
.RE
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import urllib2, json
>>> from pprint import pprint
>>> jsonreq = json\&.dumps({\*(Aqjsonrpc\*(Aq:\*(Aq2\&.0\*(Aq, \*(Aqid\*(Aq:\*(Aqqwer\*(Aq,
\&.\&.\&.                       \*(Aqmethod\*(Aq:\*(Aqaria2\&.getFiles\*(Aq, \*(Aqparams\*(Aq:[\*(Aq1\*(Aq]})
>>> c = urllib2\&.urlopen(\*(Aqhttp://localhost:6800/jsonrpc\*(Aq, jsonreq)
>>> pprint(json\&.loads(c\&.read()))
{u\*(Aqid\*(Aq: u\*(Aqqwer\*(Aq,
 u\*(Aqjsonrpc\*(Aq: u\*(Aq2\&.0\*(Aq,
 u\*(Aqresult\*(Aq: [{u\*(Aqindex\*(Aq: u\*(Aq1\*(Aq,
              u\*(Aqlength\*(Aq: u\*(Aq34896138\*(Aq,
              u\*(AqcompletedLength\*(Aq: u\*(Aq34896138\*(Aq,
              u\*(Aqpath\*(Aq: u\*(Aq/downloads/file\*(Aq,
              u\*(Aqselected\*(Aq: u\*(Aqtrue\*(Aq,
              u\*(Aquris\*(Aq: [{u\*(Aqstatus\*(Aq: u\*(Aqused\*(Aq,
                         u\*(Aquri\*(Aq: u\*(Aqhttp://example\&.org/file\*(Aq}]}]}
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import xmlrpclib
>>> from pprint import pprint
>>> s = xmlrpclib\&.ServerProxy(\*(Aqhttp://localhost:6800/rpc\*(Aq)
>>> r = s\&.aria2\&.getFiles(\*(Aq1\*(Aq)
>>> pprint(r)
[{\*(Aqindex\*(Aq: \*(Aq1\*(Aq,
  \*(Aqlength\*(Aq: \*(Aq34896138\*(Aq,
  \*(AqcompletedLength\*(Aq: \*(Aq34896138\*(Aq,
  \*(Aqpath\*(Aq: \*(Aq/downloads/file\*(Aq,
  \*(Aqselected\*(Aq: \*(Aqtrue\*(Aq,
  \*(Aquris\*(Aq: [{\*(Aqstatus\*(Aq: \*(Aqused\*(Aq,
            \*(Aquri\*(Aq: \*(Aqhttp://example\&.org/file\*(Aq}]}]
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.getPeers (gid)\fR
.RS 4
.sp
Этот метод возвращает список пиров загрузки, которая обозначена \fIgid\fR\&. Параметр \fIgid\fR имеет тип строка\&. Этот метод только для BitTorrent\&. Ответ имеет тип массив, а элемент \- тип структура и содержит следующие поля\&. Поле имеет тип строка\&.
.PP
peerId
.RS 4
Закодированное ID пира\&.
.RE
.PP
ip
.RS 4
IP\-адрес пира\&.
.RE
.PP
port
.RS 4
Номер порта пира\&.
.RE
.PP
bitfield
.RS 4
Шестнадцатеричное представление процесса загрузки\&. Старший бит соответствует блоку с индексом 0\&. Бит устанавливается, если блок доступен и не устанавливается, если блок отсутствует\&. Запасные биты в конце устанавливаются в 0\&.
.RE
.PP
amChoking
.RS 4
"true" \- если этот клиент блокирует пира\&. Иначе "false"\&.
.RE
.PP
peerChoking
.RS 4
"true" \- если пир блокирует этого клиента\&. Иначе "false"\&.
.RE
.PP
downloadSpeed
.RS 4
Скорость загрузки (байт/сек), с которой этот клиент получает от пира\&.
.RE
.PP
uploadSpeed
.RS 4
Скорость выгрузки (байт/сек), с которой этот клиент отдает пиру\&.
.RE
.PP
seeder
.RS 4
"true" \- если этот клиент является сидом\&. Иначе "false"\&.
.RE
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import urllib2, json
>>> from pprint import pprint
>>> jsonreq = json\&.dumps({\*(Aqjsonrpc\*(Aq:\*(Aq2\&.0\*(Aq, \*(Aqid\*(Aq:\*(Aqqwer\*(Aq,
\&.\&.\&.                       \*(Aqmethod\*(Aq:\*(Aqaria2\&.getPeers\*(Aq, \*(Aqparams\*(Aq:[\*(Aq1\*(Aq]})
>>> c = urllib2\&.urlopen(\*(Aqhttp://localhost:6800/jsonrpc\*(Aq, jsonreq)
>>> pprint(json\&.loads(c\&.read()))
{u\*(Aqid\*(Aq: u\*(Aqqwer\*(Aq,
 u\*(Aqjsonrpc\*(Aq: u\*(Aq2\&.0\*(Aq,
 u\*(Aqresult\*(Aq: [{u\*(AqamChoking\*(Aq: u\*(Aqtrue\*(Aq,
              u\*(Aqbitfield\*(Aq: u\*(Aqffffffffffffffffffffffffffffffffffffffff\*(Aq,
              u\*(AqdownloadSpeed\*(Aq: u\*(Aq10602\*(Aq,
              u\*(Aqip\*(Aq: u\*(Aq10\&.0\&.0\&.9\*(Aq,
              u\*(AqpeerChoking\*(Aq: u\*(Aqfalse\*(Aq,
              u\*(AqpeerId\*(Aq: u\*(Aqaria2%2F1%2E10%2E5%2D%87%2A%EDz%2F%F7%E6\*(Aq,
              u\*(Aqport\*(Aq: u\*(Aq6881\*(Aq,
              u\*(Aqseeder\*(Aq: u\*(Aqtrue\*(Aq,
              u\*(AquploadSpeed\*(Aq: u\*(Aq0\*(Aq},
             {u\*(AqamChoking\*(Aq: u\*(Aqfalse\*(Aq,
              u\*(Aqbitfield\*(Aq: u\*(Aqffffeff0fffffffbfffffff9fffffcfff7f4ffff\*(Aq,
              u\*(AqdownloadSpeed\*(Aq: u\*(Aq8654\*(Aq,
              u\*(Aqip\*(Aq: u\*(Aq10\&.0\&.0\&.30\*(Aq,
              u\*(AqpeerChoking\*(Aq: u\*(Aqfalse\*(Aq,
              u\*(AqpeerId\*(Aq: u\*(Aqbittorrent client758\*(Aq,
              u\*(Aqport\*(Aq: u\*(Aq37842\*(Aq,
              u\*(Aqseeder\*(Aq: u\*(Aqfalse\*(Aq,
              u\*(AquploadSpeed\*(Aq: u\*(Aq6890\*(Aq}]}
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import xmlrpclib
>>> from pprint import pprint
>>> s = xmlrpclib\&.ServerProxy(\*(Aqhttp://localhost:6800/rpc\*(Aq)
>>> r = s\&.aria2\&.getPeers(\*(Aq1\*(Aq)
>>> pprint(r)
[{\*(AqamChoking\*(Aq: \*(Aqtrue\*(Aq,
  \*(Aqbitfield\*(Aq: \*(Aqffffffffffffffffffffffffffffffffffffffff\*(Aq,
  \*(AqdownloadSpeed\*(Aq: \*(Aq10602\*(Aq,
  \*(Aqip\*(Aq: \*(Aq10\&.0\&.0\&.9\*(Aq,
  \*(AqpeerChoking\*(Aq: \*(Aqfalse\*(Aq,
  \*(AqpeerId\*(Aq: \*(Aqaria2%2F1%2E10%2E5%2D%87%2A%EDz%2F%F7%E6\*(Aq,
  \*(Aqport\*(Aq: \*(Aq6881\*(Aq,
  \*(Aqseeder\*(Aq: \*(Aqtrue\*(Aq,
  \*(AquploadSpeed\*(Aq: \*(Aq0\*(Aq},
 {\*(AqamChoking\*(Aq: \*(Aqfalse\*(Aq,
  \*(Aqbitfield\*(Aq: \*(Aqffffeff0fffffffbfffffff9fffffcfff7f4ffff\*(Aq,
  \*(AqdownloadSpeed\*(Aq: \*(Aq8654\*(Aq,
  \*(Aqip\*(Aq: \*(Aq10\&.0\&.0\&.30\*(Aq,
  \*(AqpeerChoking\*(Aq: \*(Aqfalse\*(Aq,
  \*(AqpeerId\*(Aq: \*(Aqbittorrent client758\*(Aq,
  \*(Aqport\*(Aq: \*(Aq37842\*(Aq,
  \*(Aqseeder\*(Aq: \*(Aqfalse,
  \*(AquploadSpeed\*(Aq: \*(Aq6890\*(Aq}]
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.getServers (gid)\fR
.RS 4
.sp
Этот метод возвращает текущие подключенные HTTP(S)/FTP\-серверы загрузки, которая обозначена \fIgid\fR\&. Параметр \fIgid\fR имеет тип строка\&. Ответ имеет тип массив, а элемент \- тип структура и содержит следующие поля\&. Поле имеет тип строка\&.
.PP
index
.RS 4
Индекс файла\&. Начинается с 1\&. Последовательность файлов такая же, что и в многофайловом торренте\&.
.RE
.PP
servers
.RS 4
Список структур, которые содержат следующие поля\&.
.PP
uri
.RS 4
Первоначально добавленный URI\&.
.RE
.PP
currentUri
.RS 4
Это URI в настоящее время используется для загрузки\&. Если происходит перенаправление, currentUri и uri могут отличаться\&.
.RE
.PP
downloadSpeed
.RS 4
Скорость загрузки (байт/сек)
.RE
.RE
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import urllib2, json
>>> from pprint import pprint
>>> jsonreq = json\&.dumps({\*(Aqjsonrpc\*(Aq:\*(Aq2\&.0\*(Aq, \*(Aqid\*(Aq:\*(Aqqwer\*(Aq,
\&.\&.\&.                       \*(Aqmethod\*(Aq:\*(Aqaria2\&.getServers\*(Aq, \*(Aqparams\*(Aq:[\*(Aq1\*(Aq]})
>>> c = urllib2\&.urlopen(\*(Aqhttp://localhost:6800/jsonrpc\*(Aq, jsonreq)
>>> pprint(json\&.loads(c\&.read()))
{u\*(Aqid\*(Aq: u\*(Aqqwer\*(Aq,
 u\*(Aqjsonrpc\*(Aq: u\*(Aq2\&.0\*(Aq,
 u\*(Aqresult\*(Aq: [{u\*(Aqindex\*(Aq: u\*(Aq1\*(Aq,
              u\*(Aqservers\*(Aq: [{u\*(AqcurrentUri\*(Aq: u\*(Aqhttp://example\&.org/file\*(Aq,
                            u\*(AqdownloadSpeed\*(Aq: u\*(Aq10467\*(Aq,
                            u\*(Aquri\*(Aq: u\*(Aqhttp://example\&.org/file\*(Aq}]}]}
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import xmlrpclib
>>> from pprint import pprint
>>> s = xmlrpclib\&.ServerProxy(\*(Aqhttp://localhost:6800/rpc\*(Aq)
>>> r = s\&.aria2\&.getServers(\*(Aq1\*(Aq)
>>> pprint(r)
[{\*(Aqindex\*(Aq: \*(Aq1\*(Aq,
  \*(Aqservers\*(Aq: [{\*(AqcurrentUri\*(Aq: \*(Aqhttp://example\&.org/dl/file\*(Aq,
               \*(AqdownloadSpeed\*(Aq: \*(Aq20285\*(Aq,
               \*(Aquri\*(Aq: \*(Aqhttp://example\&.org/file\*(Aq}]}]
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.tellActive ([keys])\fR
.RS 4
.sp
Этот метод возвращает список активных загрузок\&. Ответ имеет тип массив и его элемент такая же структура, которая возвращается методом \fBaria2\&.tellStatus\fR\&. За разъяснениями о параметре \fIkeys\fR, обратитесь к методу \fBaria2\&.tellStatus\fR\&.
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.tellWaiting (offset, num, [keys])\fR
.RS 4
.sp
Этот метод возвращает список ожидающих загрузок, включая приостановленные загрузки\&. \fIoffset\fR имеет целочисленный тип и указывает смещение, начиная от ожидающей загрузки\&. \fInum\fR имеет целочисленный тип и указывает число возвращаемых загрузок\&. За разъяснениями о параметре \fIkeys\fR, обратитесь к методу \fBaria2\&.tellStatus\fR\&.
.sp
Если смещение положительное целое число, то этот метод возвращает загрузки в диапазоне [\fIoffset\fR, \fIoffset\fR+\fInum\fR)\&.
.sp
\fIoffset\fR может быть отрицательным целым числом\&. \fIoffset\fR == \-1 указывает на последнею загрузку, которая ожидает в очереди, а \fIoffset\fR == \-2 указывает на загрузку перед последней, и так далее\&. Загрузки в ответе находятся в обратном порядке\&.
.sp
Например, допустим, что есть три загрузки "A","B" и "C", в этом порядке, которые ожидают\&. aria2\&.tellWaiting(0, 1) возвратит ["A"]\&. aria2\&.tellWaiting(1, 2) возвратит ["B", "C"]\&. aria2\&.tellWaiting(\-1, 2) возвратит ["C", "B"]\&.
.sp
Ответ имеет тип массив и его элемент такая же структура, которая возвращается методом \fBaria2\&.tellStatus\fR\&.
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.tellStopped (offset, num, [keys])\fR
.RS 4
.sp
Этот метод возвращает список остановленных загрузок\&. \fIoffset\fR имеет целочисленный тип и указывает смещение, начиная с самой старой загрузки\&. \fInum\fR имеет целочисленный тип и указывает число возвращаемых загрузок\&. За разъяснениями о параметре \fIkeys\fR, обратитесь к методу \fBaria2\&.tellStatus\fR\&.
.sp
\fIoffset\fR и \fInum\fR имеют такую же семантику, как и в методе \fBaria2\&.tellWaiting\fR\&.
.sp
Ответ имеет тип массив и его элемент такая же структура, которая возвращается методом \fBaria2\&.tellStatus\fR\&.
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.changePosition (gid, pos, how)\fR
.RS 4
.sp
Этот метод меняет позицию загрузки, которая обозначена \fIgid\fR\&. \fIpos\fR имеет целочисленный тип\&. \fIhow\fR имеет тип строка\&. Если \fIhow\fR \- "POS_SET", то это переместит загрузку на позицию, относительно начала очереди\&. Если \fIhow\fR \- "POS_CUR", это переместит загрузку на позицию, относительно текущей позиции\&. Если \fIhow\fR \- "POS_END", это переместит загрузку на позицию, относительно конца очереди\&. Если целевая позиция меньше чем 0 или за пределами конца очереди, это переместит загрузку в начало или конец очереди соответственно\&. Ответ имеет целочисленный тип и является целевой позицией\&.
.sp
Например, если GID#1 размещается на позиции 3, aria2\&.changePosition(1, \-1, POS_CUR) изменит его позицию на 2\&. Дополнительно aria2\&.changePosition(1, 0, POS_SET) изменит его позицию на 0 (начало очереди)\&.
.sp
Следующий пример перемещает загрузку, GID которой "3", в начало очереди ожидания:
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import urllib2, json
>>> from pprint import pprint
>>> jsonreq = json\&.dumps({\*(Aqjsonrpc\*(Aq:\*(Aq2\&.0\*(Aq, \*(Aqid\*(Aq:\*(Aqqwer\*(Aq,
\&.\&.\&.                       \*(Aqmethod\*(Aq:\*(Aqaria2\&.changePosition\*(Aq,
\&.\&.\&.                       \*(Aqparams\*(Aq:[\*(Aq3\*(Aq, 0, \*(AqPOS_SET\*(Aq]})
>>> c = urllib2\&.urlopen(\*(Aqhttp://localhost:6800/jsonrpc\*(Aq, jsonreq)
>>> pprint(json\&.loads(c\&.read()))
{u\*(Aqid\*(Aq: u\*(Aqqwer\*(Aq, u\*(Aqjsonrpc\*(Aq: u\*(Aq2\&.0\*(Aq, u\*(Aqresult\*(Aq: 0}
.fi
.if n \{\
.RE
.\}
.sp
Следующий пример перемещает загрузку, GID которой "3", в начало очереди ожидания:
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import xmlrpclib
>>> s = xmlrpclib\&.ServerProxy(\*(Aqhttp://localhost:6800/rpc\*(Aq)
>>> s\&.aria2\&.changePosition(\*(Aq3\*(Aq, 0, \*(AqPOS_SET\*(Aq)
0
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.changeUri (gid, fileIndex, delUris, addUris[, position])\fR
.RS 4
.sp
Этот метод удаляет URI в \fIdelUris\fR из загрузки и добавляет URI в \fIaddUris\fR к загрузке, которая обозначена \fIgid\fR\&. \fIdelUris\fR и \fIaddUris\fR являются списком строк\&. Загрузка может содержать несколько файлов и URI прилагаются к каждому файлу\&. \fIfileIndex\fR используется, чтобы выбрать файл для удаления/подключения заданных URI\&. \fIfileIndex\fR начинается с 1\&. \fIposition\fR используется для указания, куда будут вставлены URI в существующем списке ожидающих URI\&. \fIposition\fR начинается с 0\&. Когда \fIposition\fR пропущено, URI добавляются в конец списка\&. Этот метод сначала выполняет удаление, а потом добавление\&. \fIposition\fR это позиция после URI, которые будут удалены, а не позиция, когда метод вызывается\&. При удалении URI, если одинаковые URI существуют в загрузке, только один из них будет удален, для каждого URI в \fIdelUris\fR\&. Другими словами, есть три URI "http://example\&.org/aria2" и вы хотите удалить их все, вы должны указать (по крайней мере) 3 "http://example\&.org/aria2" в \fIdelUris\fR\&. Этот метод возвращает список, который содержит 2 целых числа\&. Первое \- количество удаленных URI\&. Второе \- количество добавленных URI\&.
.sp
Следующий пример добавляет 1 URI http://example\&.org/file к файлу с индексом "1", принадлежащий загрузке, GID которой "2":
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import urllib2, json
>>> from pprint import pprint
>>> jsonreq = json\&.dumps({\*(Aqjsonrpc\*(Aq:\*(Aq2\&.0\*(Aq, \*(Aqid\*(Aq:\*(Aqqwer\*(Aq,
\&.\&.\&.                       \*(Aqmethod\*(Aq:\*(Aqaria2\&.changeUri\*(Aq,
\&.\&.\&.                       \*(Aqparams\*(Aq:[\*(Aq2\*(Aq, 1, [], [\*(Aqhttp://example\&.org/file\*(Aq]]})
>>> c = urllib2\&.urlopen(\*(Aqhttp://localhost:6800/jsonrpc\*(Aq, jsonreq)
>>> pprint(json\&.loads(c\&.read()))
{u\*(Aqid\*(Aq: u\*(Aqqwer\*(Aq, u\*(Aqjsonrpc\*(Aq: u\*(Aq2\&.0\*(Aq, u\*(Aqresult\*(Aq: [0, 1]}
.fi
.if n \{\
.RE
.\}
.sp
Следующий пример добавляет 1 URI http://example\&.org/file к файлу с индексом "1", принадлежащий загрузке, GID которой "2":
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import xmlrpclib
>>> s = xmlrpclib\&.ServerProxy(\*(Aqhttp://localhost:6800/rpc\*(Aq)
>>> s\&.aria2\&.changeUri(\*(Aq2\*(Aq, 1, [], [\*(Aqhttp://example\&.org/file\*(Aq])
[0, 1]
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.getOption (gid)\fR
.RS 4
.sp
Этот метод возвращает параметры загрузки, которая обозначена \fIgid\fR\&. Ответ имеет тип структура\&. Ее поля \- это название параметра\&. Поле имеет тип строка\&. Обратите внимание, что этот метод не возвращает параметры, которые не имеют значение по умолчанию и не были заданы параметрами командной строки, конфигурационными файлами или RPC\-методами\&.
.sp
Следующий пример получает параметры загрузки, GID которой "1":
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import urllib2, json
>>> from pprint import pprint
>>> jsonreq = json\&.dumps({\*(Aqjsonrpc\*(Aq:\*(Aq2\&.0\*(Aq, \*(Aqid\*(Aq:\*(Aqqwer\*(Aq,
\&.\&.\&.                       \*(Aqmethod\*(Aq:\*(Aqaria2\&.getOption\*(Aq, \*(Aqparams\*(Aq:[\*(Aq1\*(Aq]})
>>> c = urllib2\&.urlopen(\*(Aqhttp://localhost:6800/jsonrpc\*(Aq, jsonreq)
>>> pprint(json\&.loads(c\&.read()))
{u\*(Aqid\*(Aq: u\*(Aqqwer\*(Aq,
 u\*(Aqjsonrpc\*(Aq: u\*(Aq2\&.0\*(Aq,
 u\*(Aqresult\*(Aq: {u\*(Aqallow\-overwrite\*(Aq: u\*(Aqfalse\*(Aq,
             u\*(Aqallow\-piece\-length\-change\*(Aq: u\*(Aqfalse\*(Aq,
             u\*(Aqalways\-resume\*(Aq: u\*(Aqtrue\*(Aq,
             u\*(Aqasync\-dns\*(Aq: u\*(Aqtrue\*(Aq,
 \&.\&.\&.
.fi
.if n \{\
.RE
.\}
.sp
Следующий пример получает параметры загрузки, GID которой "1":
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import xmlrpclib
>>> from pprint import pprint
>>> s = xmlrpclib\&.ServerProxy(\*(Aqhttp://localhost:6800/rpc\*(Aq)
>>> r = s\&.aria2\&.getOption(\*(Aq1\*(Aq)
>>> pprint(r)
{\*(Aqallow\-overwrite\*(Aq: \*(Aqfalse\*(Aq,
 \*(Aqallow\-piece\-length\-change\*(Aq: \*(Aqfalse\*(Aq,
 \*(Aqalways\-resume\*(Aq: \*(Aqtrue\*(Aq,
 \*(Aqasync\-dns\*(Aq: \*(Aqtrue\*(Aq,
 \&.\&.\&.\&.
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.changeOption (gid, options)\fR
.RS 4
.sp
Этот метод изменяет динамически параметры загрузки, которая обозначена \fIgid\fR\&. \fIgid\fR имеет тип строка\&. \fIoptions\fR имеет тип структура\&. Доступны следующие параметры для активных загрузок:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBbt\-max\-peers\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBbt\-request\-peer\-speed\-limit\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBbt\-remove\-unselected\-file\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBmax\-download\-limit\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBmax\-upload\-limit\fR
.RE
.sp
Для ожидающих или приостановленных загрузок, в дополнение к выше перечисленным параметрам, доступны параметры, перечисленные в подразделе \fBВходной файл\fR, исключая следующие параметры: \fBdry\-run\fR, \fBmetalink\-base\-uri\fR, \fBparameterized\-uri\fR, \fBpause\fR и \fBpiece_length\fR\&. Этот метод возвращает "OK", в случае успеха\&.
.sp
Следующий пример устанавливает параметр \fBmax\-download\-limit\fR в "20K" для загрузки, GID которой "1":
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import urllib2, json
>>> from pprint import pprint
>>> jsonreq = json\&.dumps({\*(Aqjsonrpc\*(Aq:\*(Aq2\&.0\*(Aq, \*(Aqid\*(Aq:\*(Aqqwer\*(Aq,
\&.\&.\&.                       \*(Aqmethod\*(Aq:\*(Aqaria2\&.changeOption\*(Aq,
\&.\&.\&.                       \*(Aqparams\*(Aq:[\*(Aq1\*(Aq, {\*(Aqmax\-download\-limit\*(Aq:\*(Aq10K\*(Aq}]})
>>> c = urllib2\&.urlopen(\*(Aqhttp://localhost:6800/jsonrpc\*(Aq, jsonreq)
>>> pprint(json\&.loads(c\&.read()))
{u\*(Aqid\*(Aq: u\*(Aqqwer\*(Aq, u\*(Aqjsonrpc\*(Aq: u\*(Aq2\&.0\*(Aq, u\*(Aqresult\*(Aq: u\*(AqOK\*(Aq}
.fi
.if n \{\
.RE
.\}
.sp
Следующий пример устанавливает параметр \fBmax\-download\-limit\fR в "20K" для загрузки, GID которой "1":
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import xmlrpclib
>>> s = xmlrpclib\&.ServerProxy(\*(Aqhttp://localhost:6800/rpc\*(Aq)
>>> s\&.aria2\&.changeOption(\*(Aq1\*(Aq, {\*(Aqmax\-download\-limit\*(Aq:\*(Aq20K\*(Aq})
\*(AqOK\*(Aq
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.getGlobalOption ()\fR
.RS 4
.sp
Этот метод возвращает глобальные параметры\&. Ответ имеет тип структура\&. Ее поля \- это название параметра\&. Поле имеет тип строка\&. Обратите внимание, что этот метод не возвращает параметры, которые не имеют значение по умолчанию и не были заданы параметрами командной строки, конфигурационными файлами или RPC\-методами\&. Так как глобальные параметры используются в качестве шаблона для вновь добавляемой загрузки, ответ содержит поля возвращаемые методом \fBaria2\&.getOption\fR\&.
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.changeGlobalOption (options)\fR
.RS 4
.sp
Этот метод изменяет динамически глобальные параметры\&. \fIoptions\fR имеет тип структура\&. Доступны следующие параметры:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBdownload\-result\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBlog\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBlog\-level\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBmax\-concurrent\-downloads\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBmax\-download\-result\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBmax\-overall\-download\-limit\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBmax\-overall\-upload\-limit\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBsave\-cookies\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBsave\-session\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBserver\-stat\-of\fR
.RE
.sp
В дополнение к ним, параметры перечисленные в подразделе \fBВходной файл\fR, исключая следующие параметры: \fBchecksum\fR, \fBindex\-out\fR, \fBout\fR, \fBpause\fR и \fBselect\-file\fR\&.
.sp
Используя параметр \fBlog\fR, вы можете динамически начинать вести журнал событий или изменять файл журнала событий\&. Чтобы остановить ведение журнала событий, задайте пустую строку ("") в качестве значения параметра\&. Обратите внимание, что файл журнала событий всегда открыт в режиме добавления\&. Этот метод возвращает "OK", в случае успеха\&.
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.getGlobalStat ()\fR
.RS 4
.sp
Этот метод возвращает глобальную статистику по скорости загрузки и скорости отдачи\&. Ответ имеет тип структура и содержит следующие поля\&. Поле имеет тип строка\&.
.PP
downloadSpeed
.RS 4
Общая скорость загрузки (байт/сек)\&.
.RE
.PP
uploadSpeed
.RS 4
Общая скорость отдачи (байт/сек)\&.
.RE
.PP
numActive
.RS 4
Количество активных загрузок\&.
.RE
.PP
numWaiting
.RS 4
Количество ожидающих загрузок\&.
.RE
.PP
numStopped
.RS 4
Количество остановленных загрузок\&.
.RE
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import urllib2, json
>>> from pprint import pprint
>>> jsonreq = json\&.dumps({\*(Aqjsonrpc\*(Aq:\*(Aq2\&.0\*(Aq, \*(Aqid\*(Aq:\*(Aqqwer\*(Aq,
\&.\&.\&.                       \*(Aqmethod\*(Aq:\*(Aqaria2\&.getGlobalStat\*(Aq})
>>> c = urllib2\&.urlopen(\*(Aqhttp://localhost:6800/jsonrpc\*(Aq, jsonreq)
>>> pprint(json\&.loads(c\&.read()))
{u\*(Aqid\*(Aq: u\*(Aqqwer\*(Aq,
 u\*(Aqjsonrpc\*(Aq: u\*(Aq2\&.0\*(Aq,
 u\*(Aqresult\*(Aq: {u\*(AqdownloadSpeed\*(Aq: u\*(Aq21846\*(Aq,
             u\*(AqnumActive\*(Aq: u\*(Aq2\*(Aq,
             u\*(AqnumStopped\*(Aq: u\*(Aq0\*(Aq,
             u\*(AqnumWaiting\*(Aq: u\*(Aq0\*(Aq,
             u\*(AquploadSpeed\*(Aq: u\*(Aq0\*(Aq}}
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import xmlrpclib
>>> from pprint import pprint
>>> s = xmlrpclib\&.ServerProxy(\*(Aqhttp://localhost:6800/rpc\*(Aq)
>>> r = s\&.aria2\&.getGlobalStat()
>>> pprint(r)
{\*(AqdownloadSpeed\*(Aq: \*(Aq23136\*(Aq,
 \*(AqnumActive\*(Aq: \*(Aq2\*(Aq,
 \*(AqnumStopped\*(Aq: \*(Aq0\*(Aq,
 \*(AqnumWaiting\*(Aq: \*(Aq0\*(Aq,
 \*(AquploadSpeed\*(Aq: \*(Aq0\*(Aq}
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.purgeDownloadResult ()\fR
.RS 4
.sp
Этот метод очищает, для освобождения памяти, завершенные/ошибка/удаленные загрузки\&. Метод возвращает "OK"\&.
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.removeDownloadResult (gid)\fR
.RS 4
.sp
Этот метод удаляет из памяти завершенную/ошибка/удаленную загрузку, которая обозначена \fIgid\fR\&. Метод возвращает "OK", в случае успеха\&.
.sp
Следующий пример удаляет результат загрузки, GID которой "1":
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import urllib2, json
>>> from pprint import pprint
>>> jsonreq = json\&.dumps({\*(Aqjsonrpc\*(Aq:\*(Aq2\&.0\*(Aq, \*(Aqid\*(Aq:\*(Aqqwer\*(Aq,
\&.\&.\&.                       \*(Aqmethod\*(Aq:\*(Aqaria2\&.removeDownloadResult\*(Aq,
\&.\&.\&.                       \*(Aqparams\*(Aq:[\*(Aq1\*(Aq]})
>>> c = urllib2\&.urlopen(\*(Aqhttp://localhost:6800/jsonrpc\*(Aq, jsonreq)
>>> pprint(json\&.loads(c\&.read()))
{u\*(Aqid\*(Aq: u\*(Aqqwer\*(Aq, u\*(Aqjsonrpc\*(Aq: u\*(Aq2\&.0\*(Aq, u\*(Aqresult\*(Aq: u\*(AqOK\*(Aq}
.fi
.if n \{\
.RE
.\}
.sp
Следующий пример удаляет результат загрузки, GID которой "1":
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import xmlrpclib
>>> s = xmlrpclib\&.ServerProxy(\*(Aqhttp://localhost:6800/rpc\*(Aq)
>>> s\&.aria2\&.removeDownloadResult(\*(Aq1\*(Aq)
\*(AqOK\*(Aq
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.getVersion ()\fR
.RS 4
.sp
Этот метод возвращает версию программы и список включенных возможностей\&. Ответ имеет тип структура и содержит следующие поля\&.
.PP
version
.RS 4
Номер версии программы в строке\&.
.RE
.PP
enabledFeatures
.RS 4
Список включенных возможностей\&. Каждое имя возможности имеет тип строка\&.
.RE
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import urllib2, json
>>> from pprint import pprint
>>> jsonreq = json\&.dumps({\*(Aqjsonrpc\*(Aq:\*(Aq2\&.0\*(Aq, \*(Aqid\*(Aq:\*(Aqqwer\*(Aq,
\&.\&.\&.                       \*(Aqmethod\*(Aq:\*(Aqaria2\&.getVersion\*(Aq})
>>> c = urllib2\&.urlopen(\*(Aqhttp://localhost:6800/jsonrpc\*(Aq, jsonreq)
>>> pprint(json\&.loads(c\&.read()))
{u\*(Aqid\*(Aq: u\*(Aqqwer\*(Aq,
 u\*(Aqjsonrpc\*(Aq: u\*(Aq2\&.0\*(Aq,
 u\*(Aqresult\*(Aq: {u\*(AqenabledFeatures\*(Aq: [u\*(AqAsync DNS\*(Aq,
                                  u\*(AqBitTorrent\*(Aq,
                                  u\*(AqFirefox3 Cookie\*(Aq,
                                  u\*(AqGZip\*(Aq,
                                  u\*(AqHTTPS\*(Aq,
                                  u\*(AqMessage Digest\*(Aq,
                                  u\*(AqMetalink\*(Aq,
                                  u\*(AqXML\-RPC\*(Aq],
             u\*(Aqversion\*(Aq: u\*(Aq1\&.11\&.0\*(Aq}}
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import xmlrpclib
>>> from pprint import pprint
>>> s = xmlrpclib\&.ServerProxy(\*(Aqhttp://localhost:6800/rpc\*(Aq)
>>> r = s\&.aria2\&.getVersion()
>>> pprint(r)
{\*(AqenabledFeatures\*(Aq: [\*(AqAsync DNS\*(Aq,
                     \*(AqBitTorrent\*(Aq,
                     \*(AqFirefox3 Cookie\*(Aq,
                     \*(AqGZip\*(Aq,
                     \*(AqHTTPS\*(Aq,
                     \*(AqMessage Digest\*(Aq,
                     \*(AqMetalink\*(Aq,
                     \*(AqXML\-RPC\*(Aq],
 \*(Aqversion\*(Aq: \*(Aq1\&.11\&.0\*(Aq}
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.getSessionInfo ()\fR
.RS 4
.sp
Этот метод возвращает информацию о сессии\&. Ответ имеет тип структура и содержит следующие поля\&.
.PP
sessionId
.RS 4
ID сессии, которое генерируется каждый раз, при запуске aria2\&.
.RE
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import urllib2, json
>>> from pprint import pprint
>>> jsonreq = json\&.dumps({\*(Aqjsonrpc\*(Aq:\*(Aq2\&.0\*(Aq, \*(Aqid\*(Aq:\*(Aqqwer\*(Aq,
\&.\&.\&.                       \*(Aqmethod\*(Aq:\*(Aqaria2\&.getSessionInfo\*(Aq})
>>> c = urllib2\&.urlopen(\*(Aqhttp://localhost:6800/jsonrpc\*(Aq, jsonreq)
>>> pprint(json\&.loads(c\&.read()))
{u\*(Aqid\*(Aq: u\*(Aqqwer\*(Aq,
 u\*(Aqjsonrpc\*(Aq: u\*(Aq2\&.0\*(Aq,
 u\*(Aqresult\*(Aq: {u\*(AqsessionId\*(Aq: u\*(Aqcd6a3bc6a1de28eb5bfa181e5f6b916d44af31a9\*(Aq}}
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import xmlrpclib
>>> s = xmlrpclib\&.ServerProxy(\*(Aqhttp://localhost:6800/rpc\*(Aq)
>>> s\&.aria2\&.getSessionInfo()
{\*(AqsessionId\*(Aq: \*(Aqcd6a3bc6a1de28eb5bfa181e5f6b916d44af31a9\*(Aq}
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.shutdown ()\fR
.RS 4
.sp
Этот метод закрывает aria2\&. Метод возвращает "OK"\&.
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.forceShutdown ()\fR
.RS 4
.sp
Этот метод закрывает aria2\&. Метод действует подобно \fBaria2\&.shutdown\fR, за исключением того, что метод выполняется без каких\-либо действий, которые требует времени, связь с BitTorrent\-трекером пропускается\&. Метод возвращает "OK"\&.
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBsystem.multicall (methods)\fR
.RS 4
.sp
Этот метод объединяет несколько вызовов методов в один запрос\&. \fImethods\fR имеет тип массив, а элемент является структурой\&. Структура содержит два поля: "methodName" и "params"\&. "methodName" \- это имя вызываемого метода, а "params" \- содержит параметры к методу\&. Метод возвращает массив ответов\&. Элемент массива будет одним из двух: массивом из одного элемента, который содержит возвращаемое значение, для каждого вызываемого метода или структурой с ошибками в полях, если вызов объединенного метода завершился неудачно\&.
.sp
В следующем примере мы добавляем 2 загрузки\&. Первая \- http://example\&.org/file и вторая \- один file\&.torrent:
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import urllib2, json, base64
>>> from pprint import pprint
>>> jsonreq = json\&.dumps({\*(Aqjsonrpc\*(Aq:\*(Aq2\&.0\*(Aq, \*(Aqid\*(Aq:\*(Aqqwer\*(Aq,
\&.\&.\&.                       \*(Aqmethod\*(Aq:\*(Aqsystem\&.multicall\*(Aq,
\&.\&.\&.                       \*(Aqparams\*(Aq:[[{\*(AqmethodName\*(Aq:\*(Aqaria2\&.addUri\*(Aq,
\&.\&.\&.                                   \*(Aqparams\*(Aq:[[\*(Aqhttp://example\&.org\*(Aq]]},
\&.\&.\&.                                  {\*(AqmethodName\*(Aq:\*(Aqaria2\&.addTorrent\*(Aq,
\&.\&.\&.                                   \*(Aqparams\*(Aq:[base64\&.b64encode(open(\*(Aqfile\&.torrent\*(Aq)\&.read())]}]]})
>>> c = urllib2\&.urlopen(\*(Aqhttp://localhost:6800/jsonrpc\*(Aq, jsonreq)
>>> pprint(json\&.loads(c\&.read()))
{u\*(Aqid\*(Aq: u\*(Aqqwer\*(Aq, u\*(Aqjsonrpc\*(Aq: u\*(Aq2\&.0\*(Aq, u\*(Aqresult\*(Aq: [[u\*(Aq1\*(Aq], [u\*(Aq2\*(Aq]]}
.fi
.if n \{\
.RE
.\}
.sp
JSON\-RPC также поддерживает пакетный запрос, который описывается в спецификации JSON\-RPC 2\&.0:
.sp
.if n \{\
.RS 4
.\}
.nf
>>> jsonreq = json\&.dumps([{\*(Aqjsonrpc\*(Aq:\*(Aq2\&.0\*(Aq, \*(Aqid\*(Aq:\*(Aqqwer\*(Aq,
\&.\&.\&.                        \*(Aqmethod\*(Aq:\*(Aqaria2\&.addUri\*(Aq,
\&.\&.\&.                        \*(Aqparams\*(Aq:[[\*(Aqhttp://example\&.org\*(Aq]]},
\&.\&.\&.                       {\*(Aqjsonrpc\*(Aq:\*(Aq2\&.0\*(Aq, \*(Aqid\*(Aq:\*(Aqasdf\*(Aq,
\&.\&.\&.                        \*(Aqmethod\*(Aq:\*(Aqaria2\&.addTorrent\*(Aq,
\&.\&.\&.                        \*(Aqparams\*(Aq:[base64\&.b64encode(open(\*(Aqfile\&.torrent\*(Aq)\&.read())]}])
>>> c = urllib2\&.urlopen(\*(Aqhttp://localhost:6800/jsonrpc\*(Aq, jsonreq)
>>> pprint(json\&.loads(c\&.read()))
[{u\*(Aqid\*(Aq: u\*(Aqqwer\*(Aq, u\*(Aqjsonrpc\*(Aq: u\*(Aq2\&.0\*(Aq, u\*(Aqresult\*(Aq: u\*(Aq1\*(Aq},
 {u\*(Aqid\*(Aq: u\*(Aqasdf\*(Aq, u\*(Aqjsonrpc\*(Aq: u\*(Aq2\&.0\*(Aq, u\*(Aqresult\*(Aq: u\*(Aq2\*(Aq}]
.fi
.if n \{\
.RE
.\}
.sp
В следующем примере мы добавляем 2 загрузки\&. Первая \- http://example\&.org/file и вторая \- один file\&.torrent:
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import xmlrpclib
>>> s = xmlrpclib\&.ServerProxy(\*(Aqhttp://localhost:6800/rpc\*(Aq)
>>> mc = xmlrpclib\&.MultiCall(s)
>>> mc\&.aria2\&.addUri([\*(Aqhttp://example\&.org/file\*(Aq])
>>> mc\&.aria2\&.addTorrent(xmlrpclib\&.Binary(open(\*(Aqfile\&.torrent\*(Aq)\&.read()))
>>> r = mc()
>>> tuple(r)
(\*(Aq2\*(Aq, \*(Aq3\*(Aq)
.fi
.if n \{\
.RE
.\}
.RE
.SS "Обработка ошибок"
.sp
В JSON\-RPC, aria2 возвращает JSON\-объект, который содержит код ошибки в коде и сообщение об ошибке в сообщении\&.
.sp
В XML\-RPC, aria2 возвращает faultCode=1 и сообщение об ошибке в faultString\&.
.SS "Параметры"
.sp
Такие же параметры, что доступны для \fB\-i\fR\&. Смотрите подраздел \fBВходной файл\fR для полного списка параметров\&.
.sp
В структуре, имя элемента \- это имя параметра (без "\-\-"), а значение элемента \- аргумент в виде строки\&.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПример JSON-RPC\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
{\*(Aqsplit\*(Aq:\*(Aq1\*(Aq, \*(Aqhttp\-proxy\*(Aq:\*(Aqhttp://proxy/\*(Aq}
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПример XML-RPC\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
<struct>
  <member>
    <name>split</name>
    <value><string>1</string></value>
  </member>
  <member>
    <name>http\-proxy</name>
    <value><string>http://proxy/</string></value>
  </member>
</struct>
.fi
.if n \{\
.RE
.\}
.sp
Параметры \fBheader\fR и \fBindex\-out\fR допускают нескольких определений в командной строке\&. Поскольку имя должно быть уникальным в структуре (многие реализации библиотеки XML\-RPC использует хэш или словарь для структуры), одной строки не достаточно\&. Для преодоления этой ситуации, они могут взять массив в качестве значения, а также строку\&.
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПример JSON-RPC\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
{\*(Aqheader\*(Aq:[\*(AqAccept\-Language: ja\*(Aq, \*(AqAccept\-Charset: utf\-8\*(Aq]}
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПример XML-RPC\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
<struct>
  <member>
    <name>header</name>
    <value>
      <array>
        <data>
          <value><string>Accept\-Language: ja</string></value>
          <value><string>Accept\-Charset: utf\-8</string></value>
        </data>
      </array>
    </value>
  </member>
</struct>
.fi
.if n \{\
.RE
.\}
.sp
Следующий пример добавляет загрузку с двумя параметрами: dir и header\&. Параметр header имеет 2 значения, поэтому используется список:
.sp
.if n \{\
.RS 4
.\}
.nf
>>> import xmlrpclib
>>> s = xmlrpclib\&.ServerProxy(\*(Aqhttp://localhost:6800/rpc\*(Aq)
>>> opts = dict(dir=\*(Aq/tmp\*(Aq,
\&.\&.\&.             header=[\*(AqAccept\-Language: ja\*(Aq,
\&.\&.\&.                     \*(AqAccept\-Charset: utf\-8\*(Aq])
>>> s\&.aria2\&.addUri([\*(Aqhttp://example\&.org/file\*(Aq], opts)
\*(Aq1\*(Aq
.fi
.if n \{\
.RE
.\}
.RE
.SS "JSON\-RPC используя HTTP GET"
.sp
JSON\-RPC\-интерфейс также поддерживает запрос через HTTP GET\&. Схема кодирования в GET параметров основанных на JSON\-RPC через HTTP Спецификация (2008\-1\-15(RC1))\&. Кодирование параметров через GET следующие:
.sp
.if n \{\
.RS 4
.\}
.nf
/jsonrpc?method=METHOD_NAME&id=ID&params=BASE64_ENCODED_PARAMS
.fi
.if n \{\
.RE
.\}
.sp
\fImethod\fR и \fIid\fR всегда обрабатывается как JSON\-строка и они должны быть в кодировке UTF\-8\&.
.sp
Например, закодированная строка aria2\&.tellStatus(\fI3\fR) с id=\fIfoo\fR выглядит так:
.sp
.if n \{\
.RS 4
.\}
.nf
/jsonrpc?method=aria2\&.tellStatus&id=foo&params=WyIzIl0%3D
.fi
.if n \{\
.RE
.\}
.sp
Параметр \fIparams\fR \- это JSON\-массив в Base64\-кодировке, который обычно появляется в атрибуте \fIparams\fR в JSON\-RPC\-запросе объекта\&. В примере выше, params \- [\fI3\fR], следовательно:
.sp
.if n \{\
.RS 4
.\}
.nf
[\*(Aq3\*(Aq] \-\-(Base64)\-\-> WyIzIl0= \-\-(Percent Encode)\-\-> WyIzIl0%3D
.fi
.if n \{\
.RE
.\}
.sp
JSON\-RPC\-интерфейс поддерживает JSONP\&. Вы можете определить функцию обратного вызова в параметре \fIjsoncallback\fR\&.
.sp
.if n \{\
.RS 4
.\}
.nf
/jsonrpc?method=aria2\&.tellStatus&id=foo&params=WyIzIl0%3D&jsoncallback=cb
.fi
.if n \{\
.RE
.\}
.sp
Для пакетного запроса, параметры \fImethod\fR и \fIid\fR не должны быть указаны\&. Полный запрос должен быть определен в параметре \fIparams\fR\&. Например, пакетный запрос
.sp
.if n \{\
.RS 4
.\}
.nf
[{\*(Aqjsonrpc\*(Aq:\*(Aq2\&.0\*(Aq, \*(Aqid\*(Aq:\*(Aqqwer\*(Aq, \*(Aqmethod\*(Aq:\*(Aqaria2\&.getVersion\*(Aq},
 {\*(Aqjsonrpc\*(Aq:\*(Aq2\&.0\*(Aq, \*(Aqid\*(Aq:\*(Aqasdf\*(Aq, \*(Aqmethod\*(Aq:\*(Aqaria2\&.tellActive\*(Aq}]
.fi
.if n \{\
.RE
.\}
.sp
должен кодироваться так:
.sp
.if n \{\
.RS 4
.\}
.nf
/jsonrpc?params=W3sianNvbnJwYyI6ICIyLjAiLCAiaWQiOiAicXdlciIsICJtZXRob2QiOiAiYXJpYTIuZ2V0VmVyc2lvbiJ9LCB7Impzb25ycGMiOiAiMi4wIiwgImlkIjogImFzZGYiLCAibWV0aG9kIjogImFyaWEyLnRlbGxBY3RpdmUifV0%3D
.fi
.if n \{\
.RE
.\}
.SS "JSON\-RPC через WebSocket"
.sp
JSON\-RPC через WebSocket использует тот же самый метод сигнатур и формат ответа как у JSON\-RPC через HTTP\&. Поддерживаемый WebSocket, версия 13, детально описан в RFC 6455\&.
.sp
Для отправки RPC\-запроса на RPC\-сервер, надо отправлять преобразованную в последовательную форму JSON\-строку в текстовом фрейме\&. Ответ от RPC\-сервера также доставляется в текстовом фрейме\&.
.sp
RPC\-сервер отправит уведомление клиенту\&. Уведомление является однонаправленным, поэтому клиент, который получил уведомление, не должен отвечать на него\&. Метод сигнатуры уведомления такой же, как нормальный метод запроса, но отсутствует идентификатор ключа\&. Значение, связанное с ключом params, является данными, которые переносит это уведомление\&. Формат этого значения варьируется в зависимости от метода уведомления\&. Определены следующие методы уведомления\&.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.onDownloadStart (event)\fR
.RS 4
.sp
Это уведомление будет оправлено, если загрузка запущена\&. Параметр \fIevent\fR имеет тип структура и содержит следующие поля\&. Поле имеет тип строка\&.
.PP
gid
.RS 4
GID загрузки\&.
.RE
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.onDownloadPause (event)\fR
.RS 4
.sp
Это уведомление будет оправлено, если загрузка приостановлена\&. \fIevent\fR \- такая же структура, как параметр \fIevent\fR в методе \fBaria2\&.onDownloadStart\fR\&.
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.onDownloadStop (event)\fR
.RS 4
.sp
Это уведомление будет оправлено, если загрузка остановлена пользователем\&. \fIevent\fR \- такая же структура, как параметр \fIevent\fR в методе \fBaria2\&.onDownloadStart\fR\&.
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.onDownloadComplete (event)\fR
.RS 4
.sp
Это уведомление будет оправлено, если загрузка завершена\&. В BitTorrent\-загрузках, это уведомление отправляется, когда загрузка завершена и сидирование окончено\&. \fIevent\fR \- такая же структура, как параметр \fIevent\fR в методе \fBaria2\&.onDownloadStart\fR\&.
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.onDownloadError (event)\fR
.RS 4
.sp
Это уведомление будет оправлено, если загрузка остановлена из\-за ошибки\&. \fIevent\fR \- такая же структура, как параметр \fIevent\fR в методе \fBaria2\&.onDownloadStart\fR\&.
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBaria2.onBtDownloadComplete (event)\fR
.RS 4
.sp
Это уведомление будет оправлено, если загрузка в BitTorrent завершена (но сидирование может быть не окончено)\&. \fIevent\fR \- такая же структура, как параметр \fIevent\fR в методе \fBaria2\&.onDownloadStart\fR\&.
.RE
.SS "Пример кода XML\-RPC\-клиента"
.sp
Следующий Ruby\-скрипт добавляет \fIhttp://localhost/aria2\&.tar\&.bz2\fR, с параметром \fB\-\-dir\fR=\fI/downloads\fR, в aria2c, которая работает на localhost и отображает ответ\&.
.sp
.if n \{\
.RS 4
.\}
.nf
#!/usr/bin/env ruby

require \*(Aqxmlrpc/client\*(Aq
require \*(Aqpp\*(Aq

client=XMLRPC::Client\&.new2("http://localhost:6800/rpc")

options={ "dir" => "/downloads" }
result=client\&.call("aria2\&.addUri", [ "http://localhost/aria2\&.tar\&.bz2" ], options)

pp result
.fi
.if n \{\
.RE
.\}
.sp
Если вы любитель Python, то можете использовать xmlrpclib(для Python3\&.x, используйте взамен xmlrpc\&.client) для взаимодействия с aria2\&.
.sp
.if n \{\
.RS 4
.\}
.nf
import xmlrpclib
from pprint import pprint

s = xmlrpclib\&.ServerProxy("http://localhost:6800/rpc")
r = s\&.aria2\&.addUri(["http://localhost/aria2\&.tar\&.bz2"], {"dir":"/downloads"})
pprint(r)
.fi
.if n \{\
.RE
.\}
.SH "ПРИМЕРЫ"
.SS "Загрузка по HTTP/FTP"
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBЗагрузка файла\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c "http://host/file\&.zip"
.fi
.if n \{\
.RE
.\}
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
Для остановки загрузки, нажмите Ctrl\-C\&. Вы можете возобновить передачу, запустив aria2c с теми же аргументами в том же каталоге\&. Вы можете изменить URI, если они указывают на тот же самый файл\&.
.sp .5v
.RE
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBЗагрузка файла с 2-ух разных HTTP-серверов\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c "http://host/file\&.zip" "http://mirror/file\&.zip"
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBЗагрузка файла с одно хоста, используя 2 соединения\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-x2 \-k1M "http://host/file\&.zip"
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBЗагрузка файла с HTTP- и FTP-серверов\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c "http://host1/file\&.zip" "ftp://host2/file\&.zip"
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBОдновременная загрузка файлов, перечисленных в текстовом файле\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-ifiles\&.txt \-j2
.fi
.if n \{\
.RE
.\}
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
Параметр \-j указывает количество параллельных загрузок\&.
.sp .5v
.RE
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBИспользование прокси-сервера\fR
.RS 4
.sp
Для HTTP:
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-\-http\-proxy="http://proxy:8080" "http://host/file"
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-\-http\-proxy="http://proxy:8080" \-\-no\-proxy="localhost,127\&.0\&.0\&.1,192\&.168\&.0\&.0/16" "http://host/file"
.fi
.if n \{\
.RE
.\}
.sp
Для FTP:
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-\-ftp\-proxy="http://proxy:8080" "ftp://host/file"
.fi
.if n \{\
.RE
.\}
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
Смотрите для подробностей \fB\-\-http\-proxy\fR, \fB\-\-https\-proxy\fR, \fB\-\-ftp\-proxy\fR, \fB\-\-all\-proxy\fR и \fB\-\-no\-proxy\fR\&. Вы можете указать прокси в переменных окружения\&. Смотрите раздел \fBОКРУЖЕНИЕ\fR\&.
.sp .5v
.RE
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПрокси-сервер с авторизацией\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-\-http\-proxy="http://username:password@proxy:8080" "http://host/file"
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-\-http\-proxy="http://proxy:8080" \-\-http\-proxy\-user="username" \-\-http\-proxy\-passwd="password" "http://host/file"
.fi
.if n \{\
.RE
.\}
.RE
.SS "Загрузка Metalink"
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBЗагрузка файлов с удаленного Metalink\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-\-follow\-metalink=mem "http://host/file\&.metalink"
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBЗагрузка, используя локальный metalink-файл\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-p \-\-lowest\-speed\-limit=4000 file\&.metalink
.fi
.if n \{\
.RE
.\}
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
Для остановки загрузки, нажмите Ctrl\-C\&. Вы можете возобновить передачу, запустив aria2c с теми же аргументами в том же каталоге\&.
.sp .5v
.RE
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBЗагрузка нескольких локальных metalink-файлов\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-j2 file1\&.metalink file2\&.metalink
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBЗагрузка только выбранных файлов, используя индекс\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-\-select\-file=1\-4,8 file\&.metalink
.fi
.if n \{\
.RE
.\}
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
Индекс выводится на консоль при использовании параметра \-S\&.
.sp .5v
.RE
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBЗагрузка файла, используя локальный .metalink-файл с пользовательскими настройками\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-\-metalink\-location=jp,us \-\-metalink\-version=1\&.1 \-\-metalink\-language=en\-US file\&.metalink
.fi
.if n \{\
.RE
.\}
.RE
.SS "Загрузка BitTorrent"
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBЗагрузка файлов из удаленного BitTorrent-файла\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-\-follow\-torrent=mem "http://host/file\&.torrent"
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBЗагрузка, используя локальный torrent-файл\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-\-max\-upload\-limit=40K file\&.torrent
.fi
.if n \{\
.RE
.\}
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
\-\-max\-upload\-limit определяет максимальную скорость отдачи\&.
.sp .5v
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
Для остановки загрузки, нажмите Ctrl\-C\&. Вы можете возобновить передачу, запустив aria2c с теми же аргументами в том же каталоге\&.
.sp .5v
.RE
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBЗагрузка, используя BitTorrent Magnet URI\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c "magnet:?xt=urn:btih:248D0A1CD08284299DE78D5C1ED359BB46717D8C&dn=aria2"
.fi
.if n \{\
.RE
.\}
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
Не забывайте заключать BitTorrent Magnet URI, в которой есть символ "&", в одиночные(\*(Aq) или двойные(") кавычки\&.
.sp .5v
.RE
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBЗагрузка 2-х торрентов\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-j2 file1\&.torrent file2\&.torrent
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBЗагрузка файла, используя торрент и HTTP/FTP-сервер\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-Ttest\&.torrent "http://host1/file" "ftp://host2/file"
.fi
.if n \{\
.RE
.\}
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
Загрузка многофайлового торрента через HTTP/FTP не поддерживается\&.
.sp .5v
.RE
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBЗагрузка только выбранных файлов, используя индекс (обычно называют "выборочная загрузка")\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-\-select\-file=1\-4,8 file\&.torrent
.fi
.if n \{\
.RE
.\}
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
Индекс выводится на консоль при использовании параметра \-S\&.
.sp .5v
.RE
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBУказание имени выходного файла\fR
.RS 4
.sp
Для указания выходного имени файла в BitTorrent\-загрузках, вам нужно узнать индекс файла в torrent\-файле, используя параметр \fB\-S\fR\&. Например, результат выглядит следующим образом:
.sp
.if n \{\
.RS 4
.\}
.nf
idx|path/length
===+======================
  1|dist/base\-2\&.6\&.18\&.iso
   |99\&.9MiB
\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
  2|dist/driver\-2\&.6\&.18\&.iso
   |169\&.0MiB
\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.fi
.if n \{\
.RE
.\}
.sp
Сохраняет \fIdist/base\-2\&.6\&.18\&.iso\fR в \fI/tmp/mydir/base\&.iso\fR и \fIdist/driver\-2\&.6\&.18\&.iso\fR в \fI/tmp/dir/driver\&.iso\fR, при использовании следующей команды:
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-\-dir=/tmp \-\-index\-out=1=mydir/base\&.iso \-\-index\-out=2=dir/driver\&.iso file\&.torrent
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBИзменение прослушиваемого порта для входящих соединений от пиров\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-\-listen\-port=7000\-7001,8000 file\&.torrent
.fi
.if n \{\
.RE
.\}
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
Т\&.к\&. aria2 не настраивает брандмауэр или маршрутизатор для перенаправления портов, вам решать, как это сделать вручную\&.
.sp .5v
.RE
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBУказать условие остановки программы после завершения загрузки торрента\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-\-seed\-time=120 \-\-seed\-ratio=1\&.0 file\&.torrent
.fi
.if n \{\
.RE
.\}
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
В приведенном выше примере, программа завершается через 120 минут после завершения загрузки или при достижении рейтинга сидирования 1\&.0\&.
.sp .5v
.RE
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBРегулировка скорости отдачи\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-\-max\-upload\-limit=100K file\&.torrent
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBВключить IPv4 DHT\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-\-enable\-dht \-\-dht\-listen\-port=6881 file\&.torrent
.fi
.if n \{\
.RE
.\}
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
DHT использует udp\-порт\&. Так как aria2 не настраивает брандмауэр или маршрутизатор для перенаправления портов, вам решать как это сделать вручную\&.
.sp .5v
.RE
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBВключить IPv6 DHT\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-\-enable\-dht6 \-\-dht\-listen\-port=6881
\-\-dht\-listen\-addr6=YOUR_GLOBAL_UNICAST_IPV6_ADDR \-\-enable\-async\-dns6
.fi
.if n \{\
.RE
.\}
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
Если aria2c не собрана с c\-ares, то \fB\-\-enable\-async\-dns6\fR не нужен\&. aria2 разделяет один и тот же порт между IPv4 и IPv6 DHT\&.
.sp .5v
.RE
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBДобавить и удалить URI трекера\fR
.RS 4
.sp
Удалить все URI анонса трекеров, описанных в file\&.torrent и взамен использовать "http://tracker1/announce" и "http://tracker2/announce"\&.
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-\-bt\-exclude\-tracker="*"
\-\-bt\-tracker="http://tracker1/announce,http://tracker2/announce"
file\&.torrent
.fi
.if n \{\
.RE
.\}
.RE
.SS "Больше расширенных возможностей для HTTP"
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBЗагрузить куки\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-\-load\-cookies=cookies\&.txt "http://host/file\&.zip"
.fi
.if n \{\
.RE
.\}
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
Вы можете использовать без изменения cookie\-файл Firefox/Mozilla/Chromium\&.
.sp .5v
.RE
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBВозобновление загрузки, которая начата в браузере или другой программе\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-c \-s2 "http://host/partiallydownloadedfile\&.zip"
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBКлиентский сертификат авторизации для SSL/TLS\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-\-certificate=/path/to/mycert\&.pem \-\-private\-key=/path/to/mykey\&.pem https://host/file
.fi
.if n \{\
.RE
.\}
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
Указанный в \fB\-\-private\-key\fR файл должен быть расшифрован\&. Режим работы с исходно зашифрованным закрытым ключом не определен\&.
.sp .5v
.RE
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПроверить узел при SSL/TLS, используя исходные CA-сертификаты\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-\-ca\-certificate=/path/to/ca\-certificates\&.crt \-\-check\-certificate https://host/file
.fi
.if n \{\
.RE
.\}
.RE
.SS "И еще больше расширенных возможностей"
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBРегулировка скорости загрузки\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-\-max\-download\-limit=100K file\&.metalink
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBИсправить поврежденную загрузку\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-V file\&.metalink
.fi
.if n \{\
.RE
.\}
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
При использовании BitTorrent или Metalink с контрольными суммами блоков данных можно эффективно исправлять поврежденные загрузки\&.
.sp .5v
.RE
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBОтклонить соединение, если скорость загрузки меньше чем определенное значение\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-\-lowest\-speed\-limit=10K file\&.metalink
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПоддержка параметризованных URI\fR
.RS 4
.sp
Вы можете определить набор частей:
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-P "http://{host1,host2,host3}/file\&.iso"
.fi
.if n \{\
.RE
.\}
.sp
Вы можете определить числовую последовательность:
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-Z \-P "http://host/image[000\-100]\&.png"
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПримечание\fR
.ps -1
.br
.sp
Параметр \-Z необходим, если все URI не указывают на один и тот же файл, как в примере указанном выше\&.
.sp .5v
.RE
.sp
Вы можете определить шаг счетчика:
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-Z \-P "http://host/image[A\-Z:2]\&.png"
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПроверка контрольной суммы\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-\-checksum=sha\-1=0192ba11326fe2298c8cb4de616f4d4140213837 http://example\&.org/file
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBПараллельные загрузки с произвольным числом URI, metalink, torrent\fR
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-j3 \-Z "http://host/file1" file2\&.torrent file3\&.metalink
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBШифрование BitTorrent\fR
.RS 4
.sp
Шифровать всю полезную нагрузку используя ARC4:
.sp
.if n \{\
.RS 4
.\}
.nf
aria2c \-\-bt\-min\-crypto\-level=arc4 \-\-bt\-require\-crypto=true file\&.torrent
.fi
.if n \{\
.RE
.\}
.RE
.SH "СМОТРИТЕ ТАКЖЕ"
.sp
Веб\-сайт проекта: http://aria2\&.sourceforge\&.net/
.sp
Вики aria2: http://sourceforge\&.net/apps/trac/aria2/wiki
.sp
Домашняя страница Metalink: http://www\&.metalinker\&.org/
.sp
Описание формата Metalink: http://tools\&.ietf\&.org/html/rfc5854
.SH "АВТОРСКОЕ ПРАВО"
.sp
Авторское право \(co 2006, 2011 Tatsuhiro Tsujikawa
.sp
Эта программа является свободным программным обеспечением; вы можете распространять его и/или изменять его в соответствии с условиями лицензии GNU General Public License, опубликованной Free Software Foundation; либо License версии 2, либо (по вашему выбору) любой более поздней версии\&.
.sp
Эта программа распространяется в надежде, что она будет полезной, но БЕЗ КАКИХ\-ЛИБО ГАРАНТИЙ, даже без подразумеваемых гарантий КОММЕРЧЕСКОЙ ЦЕННОСТИ или ПРИГОДНОСТИ ДЛЯ ОПРЕДЕЛЕННОЙ ЦЕЛИ\&. См\&. GNU General Public License для более подробной информации\&.
.sp
Вы должны получить копию GNU General Public License вместе с этой программой; если нет, напишите в Free Software Foundation, Inc\&., 51 Franklin Street, Fifth Floor, Boston, MA 02110\-1301 USA
.sp
Кроме того, в качестве особого исключения, владельцы авторских прав дают разрешение на ссылку части кода этой программы с библиотекой OpenSSL при определенных условиях, как описано в каждом отдельном исходном файле, а также распространять эту комбинацию вместе\&. Вы должны подчиняться GNU General Public License во всех отношениях для всего используемого кода, кроме OpenSSL\&. Если вы измените файл(ы) с этим исключением, вы можете расширить это исключение для вашей версии файла(ов), но вы не обязаны делать это\&. Если вы не хотите сделать это, удалите это заявление об исключении из вашей версии\&. Если вы удалите это заявление об исключении из всех исходных файлов в программе, то удалить его и здесь\&.
.SH "АВТОР ПЕРЕВОДА"
.sp
ITriskTI <ITriskTI@gmail\&.com>
.sp
Если вы нашли ошибку, неточность в переводе или считаете, что переведено неправильно, тогда, пожалуйста, сообщите мне на e\-mail\&.
.SH "ПРИМЕЧАНИЕ"
.sp
Эта страница руководства может содержать не обязательно самую последнюю информацию\&. Если есть некоторые противоречия между этой страницей руководства и фактическим программным обеспечением, пожалуйста, обращайтесь к английской версии страницы руководства\&.
.SH "АВТОР"
.PP
\fBTatsuhiro Tsujikawa\fR <\&t\-tujikawa@users\&.sourceforge\&.net\&>
.RS 4
Автор.
.RE
